// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.1
// source: google/ads/googleads/v15/services/smart_campaign_setting_service.proto

package services

import (
	enums "github.com/Optable/google-ads-pb/protogen/enums"
	resources "github.com/Optable/google-ads-pb/protogen/resources"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	status "google.golang.org/genproto/googleapis/rpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request message for
// [SmartCampaignSettingService.GetSmartCampaignStatus][google.ads.googleads.v15.services.SmartCampaignSettingService.GetSmartCampaignStatus].
type GetSmartCampaignStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The resource name of the Smart campaign setting belonging to the
	// Smart campaign to fetch the status of.
	ResourceName string `protobuf:"bytes,1,opt,name=resource_name,json=resourceName,proto3" json:"resource_name,omitempty"`
}

func (x *GetSmartCampaignStatusRequest) Reset() {
	*x = GetSmartCampaignStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSmartCampaignStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSmartCampaignStatusRequest) ProtoMessage() {}

func (x *GetSmartCampaignStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSmartCampaignStatusRequest.ProtoReflect.Descriptor instead.
func (*GetSmartCampaignStatusRequest) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetSmartCampaignStatusRequest) GetResourceName() string {
	if x != nil {
		return x.ResourceName
	}
	return ""
}

// Details related to Smart campaigns that are not eligible to serve.
type SmartCampaignNotEligibleDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The reason why the Smart campaign is not eligible to serve.
	NotEligibleReason *enums.SmartCampaignNotEligibleReasonEnum_SmartCampaignNotEligibleReason `protobuf:"varint,1,opt,name=not_eligible_reason,json=notEligibleReason,proto3,enum=google.ads.googleads.v15.enums.SmartCampaignNotEligibleReasonEnum_SmartCampaignNotEligibleReason,oneof" json:"not_eligible_reason,omitempty"`
}

func (x *SmartCampaignNotEligibleDetails) Reset() {
	*x = SmartCampaignNotEligibleDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmartCampaignNotEligibleDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmartCampaignNotEligibleDetails) ProtoMessage() {}

func (x *SmartCampaignNotEligibleDetails) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmartCampaignNotEligibleDetails.ProtoReflect.Descriptor instead.
func (*SmartCampaignNotEligibleDetails) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_rawDescGZIP(), []int{1}
}

func (x *SmartCampaignNotEligibleDetails) GetNotEligibleReason() enums.SmartCampaignNotEligibleReasonEnum_SmartCampaignNotEligibleReason {
	if x != nil && x.NotEligibleReason != nil {
		return *x.NotEligibleReason
	}
	return enums.SmartCampaignNotEligibleReasonEnum_SmartCampaignNotEligibleReason(0)
}

// Details related to Smart campaigns that are eligible to serve.
type SmartCampaignEligibleDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The timestamp of the last impression observed in the last 48 hours for this
	// campaign.
	// The timestamp is in the customer’s timezone and in
	// “yyyy-MM-dd HH:mm:ss” format.
	LastImpressionDateTime *string `protobuf:"bytes,1,opt,name=last_impression_date_time,json=lastImpressionDateTime,proto3,oneof" json:"last_impression_date_time,omitempty"`
	// The timestamp of when the campaign will end, if applicable.
	// The timestamp is in the customer’s timezone and in
	// “yyyy-MM-dd HH:mm:ss” format.
	EndDateTime *string `protobuf:"bytes,2,opt,name=end_date_time,json=endDateTime,proto3,oneof" json:"end_date_time,omitempty"`
}

func (x *SmartCampaignEligibleDetails) Reset() {
	*x = SmartCampaignEligibleDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmartCampaignEligibleDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmartCampaignEligibleDetails) ProtoMessage() {}

func (x *SmartCampaignEligibleDetails) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmartCampaignEligibleDetails.ProtoReflect.Descriptor instead.
func (*SmartCampaignEligibleDetails) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_rawDescGZIP(), []int{2}
}

func (x *SmartCampaignEligibleDetails) GetLastImpressionDateTime() string {
	if x != nil && x.LastImpressionDateTime != nil {
		return *x.LastImpressionDateTime
	}
	return ""
}

func (x *SmartCampaignEligibleDetails) GetEndDateTime() string {
	if x != nil && x.EndDateTime != nil {
		return *x.EndDateTime
	}
	return ""
}

// Details related to paused Smart campaigns.
type SmartCampaignPausedDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The timestamp of when the campaign was last paused.
	// The timestamp is in the customer’s timezone and in
	// “yyyy-MM-dd HH:mm:ss” format.
	PausedDateTime *string `protobuf:"bytes,1,opt,name=paused_date_time,json=pausedDateTime,proto3,oneof" json:"paused_date_time,omitempty"`
}

func (x *SmartCampaignPausedDetails) Reset() {
	*x = SmartCampaignPausedDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmartCampaignPausedDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmartCampaignPausedDetails) ProtoMessage() {}

func (x *SmartCampaignPausedDetails) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmartCampaignPausedDetails.ProtoReflect.Descriptor instead.
func (*SmartCampaignPausedDetails) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_rawDescGZIP(), []int{3}
}

func (x *SmartCampaignPausedDetails) GetPausedDateTime() string {
	if x != nil && x.PausedDateTime != nil {
		return *x.PausedDateTime
	}
	return ""
}

// Details related to removed Smart campaigns.
type SmartCampaignRemovedDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The timestamp of when the campaign was removed.
	// The timestamp is in the customer’s timezone and in
	// “yyyy-MM-dd HH:mm:ss” format.
	RemovedDateTime *string `protobuf:"bytes,1,opt,name=removed_date_time,json=removedDateTime,proto3,oneof" json:"removed_date_time,omitempty"`
}

func (x *SmartCampaignRemovedDetails) Reset() {
	*x = SmartCampaignRemovedDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmartCampaignRemovedDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmartCampaignRemovedDetails) ProtoMessage() {}

func (x *SmartCampaignRemovedDetails) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmartCampaignRemovedDetails.ProtoReflect.Descriptor instead.
func (*SmartCampaignRemovedDetails) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_rawDescGZIP(), []int{4}
}

func (x *SmartCampaignRemovedDetails) GetRemovedDateTime() string {
	if x != nil && x.RemovedDateTime != nil {
		return *x.RemovedDateTime
	}
	return ""
}

// Details related to Smart campaigns that have ended.
type SmartCampaignEndedDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The timestamp of when the campaign ended.
	// The timestamp is in the customer’s timezone and in
	// “yyyy-MM-dd HH:mm:ss” format.
	EndDateTime *string `protobuf:"bytes,1,opt,name=end_date_time,json=endDateTime,proto3,oneof" json:"end_date_time,omitempty"`
}

func (x *SmartCampaignEndedDetails) Reset() {
	*x = SmartCampaignEndedDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmartCampaignEndedDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmartCampaignEndedDetails) ProtoMessage() {}

func (x *SmartCampaignEndedDetails) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmartCampaignEndedDetails.ProtoReflect.Descriptor instead.
func (*SmartCampaignEndedDetails) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_rawDescGZIP(), []int{5}
}

func (x *SmartCampaignEndedDetails) GetEndDateTime() string {
	if x != nil && x.EndDateTime != nil {
		return *x.EndDateTime
	}
	return ""
}

// Response message for
// [SmartCampaignSettingService.GetSmartCampaignStatus][google.ads.googleads.v15.services.SmartCampaignSettingService.GetSmartCampaignStatus].
type GetSmartCampaignStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The status of this Smart campaign.
	SmartCampaignStatus enums.SmartCampaignStatusEnum_SmartCampaignStatus `protobuf:"varint,1,opt,name=smart_campaign_status,json=smartCampaignStatus,proto3,enum=google.ads.googleads.v15.enums.SmartCampaignStatusEnum_SmartCampaignStatus" json:"smart_campaign_status,omitempty"`
	// Additional details accompanying the status of a Smart campaign.
	//
	// Types that are assignable to SmartCampaignStatusDetails:
	//
	//	*GetSmartCampaignStatusResponse_NotEligibleDetails
	//	*GetSmartCampaignStatusResponse_EligibleDetails
	//	*GetSmartCampaignStatusResponse_PausedDetails
	//	*GetSmartCampaignStatusResponse_RemovedDetails
	//	*GetSmartCampaignStatusResponse_EndedDetails
	SmartCampaignStatusDetails isGetSmartCampaignStatusResponse_SmartCampaignStatusDetails `protobuf_oneof:"smart_campaign_status_details"`
}

func (x *GetSmartCampaignStatusResponse) Reset() {
	*x = GetSmartCampaignStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSmartCampaignStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSmartCampaignStatusResponse) ProtoMessage() {}

func (x *GetSmartCampaignStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSmartCampaignStatusResponse.ProtoReflect.Descriptor instead.
func (*GetSmartCampaignStatusResponse) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetSmartCampaignStatusResponse) GetSmartCampaignStatus() enums.SmartCampaignStatusEnum_SmartCampaignStatus {
	if x != nil {
		return x.SmartCampaignStatus
	}
	return enums.SmartCampaignStatusEnum_SmartCampaignStatus(0)
}

func (m *GetSmartCampaignStatusResponse) GetSmartCampaignStatusDetails() isGetSmartCampaignStatusResponse_SmartCampaignStatusDetails {
	if m != nil {
		return m.SmartCampaignStatusDetails
	}
	return nil
}

func (x *GetSmartCampaignStatusResponse) GetNotEligibleDetails() *SmartCampaignNotEligibleDetails {
	if x, ok := x.GetSmartCampaignStatusDetails().(*GetSmartCampaignStatusResponse_NotEligibleDetails); ok {
		return x.NotEligibleDetails
	}
	return nil
}

func (x *GetSmartCampaignStatusResponse) GetEligibleDetails() *SmartCampaignEligibleDetails {
	if x, ok := x.GetSmartCampaignStatusDetails().(*GetSmartCampaignStatusResponse_EligibleDetails); ok {
		return x.EligibleDetails
	}
	return nil
}

func (x *GetSmartCampaignStatusResponse) GetPausedDetails() *SmartCampaignPausedDetails {
	if x, ok := x.GetSmartCampaignStatusDetails().(*GetSmartCampaignStatusResponse_PausedDetails); ok {
		return x.PausedDetails
	}
	return nil
}

func (x *GetSmartCampaignStatusResponse) GetRemovedDetails() *SmartCampaignRemovedDetails {
	if x, ok := x.GetSmartCampaignStatusDetails().(*GetSmartCampaignStatusResponse_RemovedDetails); ok {
		return x.RemovedDetails
	}
	return nil
}

func (x *GetSmartCampaignStatusResponse) GetEndedDetails() *SmartCampaignEndedDetails {
	if x, ok := x.GetSmartCampaignStatusDetails().(*GetSmartCampaignStatusResponse_EndedDetails); ok {
		return x.EndedDetails
	}
	return nil
}

type isGetSmartCampaignStatusResponse_SmartCampaignStatusDetails interface {
	isGetSmartCampaignStatusResponse_SmartCampaignStatusDetails()
}

type GetSmartCampaignStatusResponse_NotEligibleDetails struct {
	// Details related to Smart campaigns that are ineligible to serve.
	NotEligibleDetails *SmartCampaignNotEligibleDetails `protobuf:"bytes,2,opt,name=not_eligible_details,json=notEligibleDetails,proto3,oneof"`
}

type GetSmartCampaignStatusResponse_EligibleDetails struct {
	// Details related to Smart campaigns that are eligible to serve.
	EligibleDetails *SmartCampaignEligibleDetails `protobuf:"bytes,3,opt,name=eligible_details,json=eligibleDetails,proto3,oneof"`
}

type GetSmartCampaignStatusResponse_PausedDetails struct {
	// Details related to paused Smart campaigns.
	PausedDetails *SmartCampaignPausedDetails `protobuf:"bytes,4,opt,name=paused_details,json=pausedDetails,proto3,oneof"`
}

type GetSmartCampaignStatusResponse_RemovedDetails struct {
	// Details related to removed Smart campaigns.
	RemovedDetails *SmartCampaignRemovedDetails `protobuf:"bytes,5,opt,name=removed_details,json=removedDetails,proto3,oneof"`
}

type GetSmartCampaignStatusResponse_EndedDetails struct {
	// Details related to Smart campaigns that have ended.
	EndedDetails *SmartCampaignEndedDetails `protobuf:"bytes,6,opt,name=ended_details,json=endedDetails,proto3,oneof"`
}

func (*GetSmartCampaignStatusResponse_NotEligibleDetails) isGetSmartCampaignStatusResponse_SmartCampaignStatusDetails() {
}

func (*GetSmartCampaignStatusResponse_EligibleDetails) isGetSmartCampaignStatusResponse_SmartCampaignStatusDetails() {
}

func (*GetSmartCampaignStatusResponse_PausedDetails) isGetSmartCampaignStatusResponse_SmartCampaignStatusDetails() {
}

func (*GetSmartCampaignStatusResponse_RemovedDetails) isGetSmartCampaignStatusResponse_SmartCampaignStatusDetails() {
}

func (*GetSmartCampaignStatusResponse_EndedDetails) isGetSmartCampaignStatusResponse_SmartCampaignStatusDetails() {
}

// Request message for
// [SmartCampaignSettingService.MutateSmartCampaignSettings][google.ads.googleads.v15.services.SmartCampaignSettingService.MutateSmartCampaignSettings].
type MutateSmartCampaignSettingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The ID of the customer whose Smart campaign settings are being
	// modified.
	CustomerId string `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	// Required. The list of operations to perform on individual Smart campaign
	// settings.
	Operations []*SmartCampaignSettingOperation `protobuf:"bytes,2,rep,name=operations,proto3" json:"operations,omitempty"`
	// If true, successful operations will be carried out and invalid
	// operations will return errors. If false, all operations will be carried
	// out in one transaction if and only if they are all valid.
	// Default is false.
	PartialFailure bool `protobuf:"varint,3,opt,name=partial_failure,json=partialFailure,proto3" json:"partial_failure,omitempty"`
	// If true, the request is validated but not executed. Only errors are
	// returned, not results.
	ValidateOnly bool `protobuf:"varint,4,opt,name=validate_only,json=validateOnly,proto3" json:"validate_only,omitempty"`
	// The response content type setting. Determines whether the mutable resource
	// or just the resource name should be returned post mutation.
	ResponseContentType enums.ResponseContentTypeEnum_ResponseContentType `protobuf:"varint,5,opt,name=response_content_type,json=responseContentType,proto3,enum=google.ads.googleads.v15.enums.ResponseContentTypeEnum_ResponseContentType" json:"response_content_type,omitempty"`
}

func (x *MutateSmartCampaignSettingsRequest) Reset() {
	*x = MutateSmartCampaignSettingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MutateSmartCampaignSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MutateSmartCampaignSettingsRequest) ProtoMessage() {}

func (x *MutateSmartCampaignSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MutateSmartCampaignSettingsRequest.ProtoReflect.Descriptor instead.
func (*MutateSmartCampaignSettingsRequest) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_rawDescGZIP(), []int{7}
}

func (x *MutateSmartCampaignSettingsRequest) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *MutateSmartCampaignSettingsRequest) GetOperations() []*SmartCampaignSettingOperation {
	if x != nil {
		return x.Operations
	}
	return nil
}

func (x *MutateSmartCampaignSettingsRequest) GetPartialFailure() bool {
	if x != nil {
		return x.PartialFailure
	}
	return false
}

func (x *MutateSmartCampaignSettingsRequest) GetValidateOnly() bool {
	if x != nil {
		return x.ValidateOnly
	}
	return false
}

func (x *MutateSmartCampaignSettingsRequest) GetResponseContentType() enums.ResponseContentTypeEnum_ResponseContentType {
	if x != nil {
		return x.ResponseContentType
	}
	return enums.ResponseContentTypeEnum_ResponseContentType(0)
}

// A single operation to update Smart campaign settings for a campaign.
type SmartCampaignSettingOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Update operation: The Smart campaign setting must specify a valid
	// resource name.
	Update *resources.SmartCampaignSetting `protobuf:"bytes,1,opt,name=update,proto3" json:"update,omitempty"`
	// FieldMask that determines which resource fields are modified in an update.
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
}

func (x *SmartCampaignSettingOperation) Reset() {
	*x = SmartCampaignSettingOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmartCampaignSettingOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmartCampaignSettingOperation) ProtoMessage() {}

func (x *SmartCampaignSettingOperation) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmartCampaignSettingOperation.ProtoReflect.Descriptor instead.
func (*SmartCampaignSettingOperation) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_rawDescGZIP(), []int{8}
}

func (x *SmartCampaignSettingOperation) GetUpdate() *resources.SmartCampaignSetting {
	if x != nil {
		return x.Update
	}
	return nil
}

func (x *SmartCampaignSettingOperation) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

// Response message for campaign mutate.
type MutateSmartCampaignSettingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Errors that pertain to operation failures in the partial failure mode.
	// Returned only when partial_failure = true and all errors occur inside the
	// operations. If any errors occur outside the operations (for example, auth
	// errors), we return an RPC level error.
	PartialFailureError *status.Status `protobuf:"bytes,1,opt,name=partial_failure_error,json=partialFailureError,proto3" json:"partial_failure_error,omitempty"`
	// All results for the mutate.
	Results []*MutateSmartCampaignSettingResult `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *MutateSmartCampaignSettingsResponse) Reset() {
	*x = MutateSmartCampaignSettingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MutateSmartCampaignSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MutateSmartCampaignSettingsResponse) ProtoMessage() {}

func (x *MutateSmartCampaignSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MutateSmartCampaignSettingsResponse.ProtoReflect.Descriptor instead.
func (*MutateSmartCampaignSettingsResponse) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_rawDescGZIP(), []int{9}
}

func (x *MutateSmartCampaignSettingsResponse) GetPartialFailureError() *status.Status {
	if x != nil {
		return x.PartialFailureError
	}
	return nil
}

func (x *MutateSmartCampaignSettingsResponse) GetResults() []*MutateSmartCampaignSettingResult {
	if x != nil {
		return x.Results
	}
	return nil
}

// The result for the Smart campaign setting mutate.
type MutateSmartCampaignSettingResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Returned for successful operations.
	ResourceName string `protobuf:"bytes,1,opt,name=resource_name,json=resourceName,proto3" json:"resource_name,omitempty"`
	// The mutated Smart campaign setting with only mutable fields after mutate.
	// The field will only be returned when response_content_type is set to
	// "MUTABLE_RESOURCE".
	SmartCampaignSetting *resources.SmartCampaignSetting `protobuf:"bytes,2,opt,name=smart_campaign_setting,json=smartCampaignSetting,proto3" json:"smart_campaign_setting,omitempty"`
}

func (x *MutateSmartCampaignSettingResult) Reset() {
	*x = MutateSmartCampaignSettingResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MutateSmartCampaignSettingResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MutateSmartCampaignSettingResult) ProtoMessage() {}

func (x *MutateSmartCampaignSettingResult) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MutateSmartCampaignSettingResult.ProtoReflect.Descriptor instead.
func (*MutateSmartCampaignSettingResult) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_rawDescGZIP(), []int{10}
}

func (x *MutateSmartCampaignSettingResult) GetResourceName() string {
	if x != nil {
		return x.ResourceName
	}
	return ""
}

func (x *MutateSmartCampaignSettingResult) GetSmartCampaignSetting() *resources.SmartCampaignSetting {
	if x != nil {
		return x.SmartCampaignSetting
	}
	return nil
}

var File_google_ads_googleads_v15_services_smart_campaign_setting_service_proto protoreflect.FileDescriptor

var file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_rawDesc = []byte{
	0x0a, 0x46, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x64, 0x73, 0x2f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2f, 0x76, 0x31, 0x35, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2f, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x5f, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69,
	0x67, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x21, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76,
	0x31, 0x35, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x3a, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x64, 0x73, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64,
	0x73, 0x2f, 0x76, 0x31, 0x35, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x47, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x64, 0x73, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2f, 0x76, 0x31,
	0x35, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x5f, 0x63, 0x61,
	0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x65, 0x6c, 0x69, 0x67, 0x69,
	0x62, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x3a, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x64, 0x73, 0x2f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2f, 0x76, 0x31, 0x35, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73,
	0x2f, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x5f, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x64, 0x73, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61,
	0x64, 0x73, 0x2f, 0x76, 0x31, 0x35, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x2f, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x5f, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x17, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7b, 0x0a, 0x1d, 0x47,
	0x65, 0x74, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5a, 0x0a, 0x0d,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x35, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x2f, 0x0a, 0x2d, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xd2, 0x01, 0x0a, 0x1f, 0x53, 0x6d, 0x61,
	0x72, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x4e, 0x6f, 0x74, 0x45, 0x6c, 0x69,
	0x67, 0x69, 0x62, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x96, 0x01, 0x0a,
	0x13, 0x6e, 0x6f, 0x74, 0x5f, 0x65, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x61, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64,
	0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x53, 0x6d, 0x61, 0x72,
	0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x4e, 0x6f, 0x74, 0x45, 0x6c, 0x69, 0x67,
	0x69, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x53,
	0x6d, 0x61, 0x72, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x4e, 0x6f, 0x74, 0x45,
	0x6c, 0x69, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x48, 0x00, 0x52,
	0x11, 0x6e, 0x6f, 0x74, 0x45, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x65, 0x6c,
	0x69, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0xb7, 0x01,
	0x0a, 0x1c, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x45,
	0x6c, 0x69, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x3e,
	0x0a, 0x19, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x69, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x16, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x27,
	0x0a, 0x0d, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0b, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x1c, 0x0a, 0x1a, 0x5f, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x69, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x60, 0x0a, 0x1a, 0x53, 0x6d, 0x61, 0x72, 0x74,
	0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x50, 0x61, 0x75, 0x73, 0x65, 0x64, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x2d, 0x0a, 0x10, 0x70, 0x61, 0x75, 0x73, 0x65, 0x64, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x0e, 0x70, 0x61, 0x75, 0x73, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x70, 0x61, 0x75, 0x73, 0x65, 0x64, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x64, 0x0a, 0x1b, 0x53, 0x6d, 0x61,
	0x72, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x2f, 0x0a, 0x11, 0x72, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x44, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x72, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x22,
	0x56, 0x0a, 0x19, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e,
	0x45, 0x6e, 0x64, 0x65, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x27, 0x0a, 0x0d,
	0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x22, 0xe0, 0x05, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x53,
	0x6d, 0x61, 0x72, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7f, 0x0a, 0x15, 0x73, 0x6d,
	0x61, 0x72, 0x74, 0x5f, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4b, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73,
	0x2e, 0x76, 0x31, 0x35, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x53, 0x6d, 0x61, 0x72, 0x74,
	0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x6e,
	0x75, 0x6d, 0x2e, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x13, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x61, 0x6d,
	0x70, 0x61, 0x69, 0x67, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x76, 0x0a, 0x14, 0x6e,
	0x6f, 0x74, 0x5f, 0x65, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73,
	0x2e, 0x76, 0x31, 0x35, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x6d,
	0x61, 0x72, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x4e, 0x6f, 0x74, 0x45, 0x6c,
	0x69, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x48, 0x00, 0x52,
	0x12, 0x6e, 0x6f, 0x74, 0x45, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x12, 0x6c, 0x0a, 0x10, 0x65, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x5f,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x45,
	0x6c, 0x69, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x48, 0x00,
	0x52, 0x0f, 0x65, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x12, 0x66, 0x0a, 0x0e, 0x70, 0x61, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73,
	0x2e, 0x76, 0x31, 0x35, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x6d,
	0x61, 0x72, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x50, 0x61, 0x75, 0x73, 0x65,
	0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x0d, 0x70, 0x61, 0x75, 0x73,
	0x65, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x69, 0x0a, 0x0f, 0x72, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x64, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x61, 0x6d, 0x70,
	0x61, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x48, 0x00, 0x52, 0x0e, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x12, 0x63, 0x0a, 0x0d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61,
	0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x45, 0x6e, 0x64,
	0x65, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x0c, 0x65, 0x6e, 0x64,
	0x65, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x42, 0x1f, 0x0a, 0x1d, 0x73, 0x6d, 0x61,
	0x72, 0x74, 0x5f, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x80, 0x03, 0x0a, 0x22, 0x4d,
	0x75, 0x74, 0x61, 0x74, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69,
	0x67, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x24, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0a, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x65, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61,
	0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x03, 0xe0,
	0x41, 0x02, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x27,
	0x0a, 0x0f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c,
	0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x7f, 0x0a, 0x15,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4b, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61,
	0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x13, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xae, 0x01,
	0x0a, 0x1d, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x50, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x38, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69,
	0x67, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61,
	0x73, 0x6b, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0xcc,
	0x01, 0x0a, 0x23, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x61,
	0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x15, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61,
	0x6c, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x13, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x61, 0x6c, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x5d,
	0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x43, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0xeb, 0x01,
	0x0a, 0x20, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x61, 0x6d,
	0x70, 0x61, 0x69, 0x67, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x57, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x32, 0xfa, 0x41, 0x2f, 0x0a, 0x2d,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x61,
	0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x0c, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x6e, 0x0a, 0x16, 0x73,
	0x6d, 0x61, 0x72, 0x74, 0x5f, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61,
	0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x2e, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x14, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x61, 0x6d, 0x70,
	0x61, 0x69, 0x67, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x32, 0xfd, 0x04, 0x0a, 0x1b,
	0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x86, 0x02, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x40, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31,
	0x35, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6d,
	0x61, 0x72, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x41, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e,
	0x76, 0x31, 0x35, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x67, 0xda, 0x41, 0x0d,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x51, 0x12, 0x4f, 0x2f, 0x76, 0x31, 0x35, 0x2f, 0x7b, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x73, 0x2f, 0x2a, 0x2f, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69,
	0x67, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2f, 0x2a, 0x7d, 0x3a, 0x67, 0x65,
	0x74, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x8d, 0x02, 0x0a, 0x1b, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x65, 0x53,
	0x6d, 0x61, 0x72, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x12, 0x45, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64,
	0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x65, 0x53,
	0x6d, 0x61, 0x72, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x46, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61,
	0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x4d, 0x75, 0x74, 0x61, 0x74, 0x65, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x5f, 0xda, 0x41, 0x16, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x2c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x40, 0x3a, 0x01, 0x2a, 0x22, 0x3b, 0x2f, 0x76, 0x31, 0x35, 0x2f, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x3d, 0x2a, 0x7d, 0x2f, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x61, 0x6d,
	0x70, 0x61, 0x69, 0x67, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x3a, 0x6d, 0x75,
	0x74, 0x61, 0x74, 0x65, 0x1a, 0x45, 0xca, 0x41, 0x18, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61,
	0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f,
	0x6d, 0xd2, 0x41, 0x27, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x77, 0x77, 0x77, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61,
	0x75, 0x74, 0x68, 0x2f, 0x61, 0x64, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x42, 0x8c, 0x02, 0x0a, 0x25,
	0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x42, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x61, 0x6d, 0x70,
	0x61, 0x69, 0x67, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x49, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x67, 0x65, 0x6e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73,
	0x2f, 0x61, 0x64, 0x73, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2f, 0x76,
	0x31, 0x35, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x3b, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0xa2, 0x02, 0x03, 0x47, 0x41, 0x41, 0xaa, 0x02, 0x21, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x41, 0x64, 0x73, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x64,
	0x73, 0x2e, 0x56, 0x31, 0x35, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0xca, 0x02,
	0x21, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x5c, 0x41, 0x64, 0x73, 0x5c, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x41, 0x64, 0x73, 0x5c, 0x56, 0x31, 0x35, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0xea, 0x02, 0x25, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x3a, 0x3a, 0x41, 0x64, 0x73,
	0x3a, 0x3a, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x64, 0x73, 0x3a, 0x3a, 0x56, 0x31, 0x35,
	0x3a, 0x3a, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_rawDescOnce sync.Once
	file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_rawDescData = file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_rawDesc
)

func file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_rawDescGZIP() []byte {
	file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_rawDescOnce.Do(func() {
		file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_rawDescData)
	})
	return file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_rawDescData
}

var file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_goTypes = []interface{}{
	(*GetSmartCampaignStatusRequest)(nil),                                        // 0: google.ads.googleads.v15.services.GetSmartCampaignStatusRequest
	(*SmartCampaignNotEligibleDetails)(nil),                                      // 1: google.ads.googleads.v15.services.SmartCampaignNotEligibleDetails
	(*SmartCampaignEligibleDetails)(nil),                                         // 2: google.ads.googleads.v15.services.SmartCampaignEligibleDetails
	(*SmartCampaignPausedDetails)(nil),                                           // 3: google.ads.googleads.v15.services.SmartCampaignPausedDetails
	(*SmartCampaignRemovedDetails)(nil),                                          // 4: google.ads.googleads.v15.services.SmartCampaignRemovedDetails
	(*SmartCampaignEndedDetails)(nil),                                            // 5: google.ads.googleads.v15.services.SmartCampaignEndedDetails
	(*GetSmartCampaignStatusResponse)(nil),                                       // 6: google.ads.googleads.v15.services.GetSmartCampaignStatusResponse
	(*MutateSmartCampaignSettingsRequest)(nil),                                   // 7: google.ads.googleads.v15.services.MutateSmartCampaignSettingsRequest
	(*SmartCampaignSettingOperation)(nil),                                        // 8: google.ads.googleads.v15.services.SmartCampaignSettingOperation
	(*MutateSmartCampaignSettingsResponse)(nil),                                  // 9: google.ads.googleads.v15.services.MutateSmartCampaignSettingsResponse
	(*MutateSmartCampaignSettingResult)(nil),                                     // 10: google.ads.googleads.v15.services.MutateSmartCampaignSettingResult
	(enums.SmartCampaignNotEligibleReasonEnum_SmartCampaignNotEligibleReason)(0), // 11: google.ads.googleads.v15.enums.SmartCampaignNotEligibleReasonEnum.SmartCampaignNotEligibleReason
	(enums.SmartCampaignStatusEnum_SmartCampaignStatus)(0),                       // 12: google.ads.googleads.v15.enums.SmartCampaignStatusEnum.SmartCampaignStatus
	(enums.ResponseContentTypeEnum_ResponseContentType)(0),                       // 13: google.ads.googleads.v15.enums.ResponseContentTypeEnum.ResponseContentType
	(*resources.SmartCampaignSetting)(nil),                                       // 14: google.ads.googleads.v15.resources.SmartCampaignSetting
	(*fieldmaskpb.FieldMask)(nil),                                                // 15: google.protobuf.FieldMask
	(*status.Status)(nil),                                                        // 16: google.rpc.Status
}
var file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_depIdxs = []int32{
	11, // 0: google.ads.googleads.v15.services.SmartCampaignNotEligibleDetails.not_eligible_reason:type_name -> google.ads.googleads.v15.enums.SmartCampaignNotEligibleReasonEnum.SmartCampaignNotEligibleReason
	12, // 1: google.ads.googleads.v15.services.GetSmartCampaignStatusResponse.smart_campaign_status:type_name -> google.ads.googleads.v15.enums.SmartCampaignStatusEnum.SmartCampaignStatus
	1,  // 2: google.ads.googleads.v15.services.GetSmartCampaignStatusResponse.not_eligible_details:type_name -> google.ads.googleads.v15.services.SmartCampaignNotEligibleDetails
	2,  // 3: google.ads.googleads.v15.services.GetSmartCampaignStatusResponse.eligible_details:type_name -> google.ads.googleads.v15.services.SmartCampaignEligibleDetails
	3,  // 4: google.ads.googleads.v15.services.GetSmartCampaignStatusResponse.paused_details:type_name -> google.ads.googleads.v15.services.SmartCampaignPausedDetails
	4,  // 5: google.ads.googleads.v15.services.GetSmartCampaignStatusResponse.removed_details:type_name -> google.ads.googleads.v15.services.SmartCampaignRemovedDetails
	5,  // 6: google.ads.googleads.v15.services.GetSmartCampaignStatusResponse.ended_details:type_name -> google.ads.googleads.v15.services.SmartCampaignEndedDetails
	8,  // 7: google.ads.googleads.v15.services.MutateSmartCampaignSettingsRequest.operations:type_name -> google.ads.googleads.v15.services.SmartCampaignSettingOperation
	13, // 8: google.ads.googleads.v15.services.MutateSmartCampaignSettingsRequest.response_content_type:type_name -> google.ads.googleads.v15.enums.ResponseContentTypeEnum.ResponseContentType
	14, // 9: google.ads.googleads.v15.services.SmartCampaignSettingOperation.update:type_name -> google.ads.googleads.v15.resources.SmartCampaignSetting
	15, // 10: google.ads.googleads.v15.services.SmartCampaignSettingOperation.update_mask:type_name -> google.protobuf.FieldMask
	16, // 11: google.ads.googleads.v15.services.MutateSmartCampaignSettingsResponse.partial_failure_error:type_name -> google.rpc.Status
	10, // 12: google.ads.googleads.v15.services.MutateSmartCampaignSettingsResponse.results:type_name -> google.ads.googleads.v15.services.MutateSmartCampaignSettingResult
	14, // 13: google.ads.googleads.v15.services.MutateSmartCampaignSettingResult.smart_campaign_setting:type_name -> google.ads.googleads.v15.resources.SmartCampaignSetting
	0,  // 14: google.ads.googleads.v15.services.SmartCampaignSettingService.GetSmartCampaignStatus:input_type -> google.ads.googleads.v15.services.GetSmartCampaignStatusRequest
	7,  // 15: google.ads.googleads.v15.services.SmartCampaignSettingService.MutateSmartCampaignSettings:input_type -> google.ads.googleads.v15.services.MutateSmartCampaignSettingsRequest
	6,  // 16: google.ads.googleads.v15.services.SmartCampaignSettingService.GetSmartCampaignStatus:output_type -> google.ads.googleads.v15.services.GetSmartCampaignStatusResponse
	9,  // 17: google.ads.googleads.v15.services.SmartCampaignSettingService.MutateSmartCampaignSettings:output_type -> google.ads.googleads.v15.services.MutateSmartCampaignSettingsResponse
	16, // [16:18] is the sub-list for method output_type
	14, // [14:16] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_init() }
func file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_init() {
	if File_google_ads_googleads_v15_services_smart_campaign_setting_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSmartCampaignStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmartCampaignNotEligibleDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmartCampaignEligibleDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmartCampaignPausedDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmartCampaignRemovedDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmartCampaignEndedDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSmartCampaignStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MutateSmartCampaignSettingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmartCampaignSettingOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MutateSmartCampaignSettingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MutateSmartCampaignSettingResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*GetSmartCampaignStatusResponse_NotEligibleDetails)(nil),
		(*GetSmartCampaignStatusResponse_EligibleDetails)(nil),
		(*GetSmartCampaignStatusResponse_PausedDetails)(nil),
		(*GetSmartCampaignStatusResponse_RemovedDetails)(nil),
		(*GetSmartCampaignStatusResponse_EndedDetails)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_goTypes,
		DependencyIndexes: file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_depIdxs,
		MessageInfos:      file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_msgTypes,
	}.Build()
	File_google_ads_googleads_v15_services_smart_campaign_setting_service_proto = out.File
	file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_rawDesc = nil
	file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_goTypes = nil
	file_google_ads_googleads_v15_services_smart_campaign_setting_service_proto_depIdxs = nil
}
