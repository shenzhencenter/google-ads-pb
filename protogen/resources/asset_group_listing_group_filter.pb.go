// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.1
// source: google/ads/googleads/v15/resources/asset_group_listing_group_filter.proto

package resources

import (
	enums "github.com/Optable/google-ads-pb/protogen/enums"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// AssetGroupListingGroupFilter represents a listing group filter tree node in
// an asset group.
type AssetGroupListingGroupFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Immutable. The resource name of the asset group listing group filter.
	// Asset group listing group filter resource name have the form:
	//
	// `customers/{customer_id}/assetGroupListingGroupFilters/{asset_group_id}~{listing_group_filter_id}`
	ResourceName string `protobuf:"bytes,1,opt,name=resource_name,json=resourceName,proto3" json:"resource_name,omitempty"`
	// Immutable. The asset group which this asset group listing group filter is
	// part of.
	AssetGroup string `protobuf:"bytes,2,opt,name=asset_group,json=assetGroup,proto3" json:"asset_group,omitempty"`
	// Output only. The ID of the ListingGroupFilter.
	Id int64 `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	// Immutable. Type of a listing group filter node.
	Type enums.ListingGroupFilterTypeEnum_ListingGroupFilterType `protobuf:"varint,4,opt,name=type,proto3,enum=google.ads.googleads.v15.enums.ListingGroupFilterTypeEnum_ListingGroupFilterType" json:"type,omitempty"`
	// Immutable. The source of listings filtered by this listing group filter.
	ListingSource enums.ListingGroupFilterListingSourceEnum_ListingGroupFilterListingSource `protobuf:"varint,9,opt,name=listing_source,json=listingSource,proto3,enum=google.ads.googleads.v15.enums.ListingGroupFilterListingSourceEnum_ListingGroupFilterListingSource" json:"listing_source,omitempty"`
	// Dimension value with which this listing group is refining its parent.
	// Undefined for the root group.
	CaseValue *ListingGroupFilterDimension `protobuf:"bytes,6,opt,name=case_value,json=caseValue,proto3" json:"case_value,omitempty"`
	// Immutable. Resource name of the parent listing group subdivision. Null for
	// the root listing group filter node.
	ParentListingGroupFilter string `protobuf:"bytes,7,opt,name=parent_listing_group_filter,json=parentListingGroupFilter,proto3" json:"parent_listing_group_filter,omitempty"`
	// Output only. The path of dimensions defining this listing group filter.
	Path *ListingGroupFilterDimensionPath `protobuf:"bytes,8,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *AssetGroupListingGroupFilter) Reset() {
	*x = AssetGroupListingGroupFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetGroupListingGroupFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetGroupListingGroupFilter) ProtoMessage() {}

func (x *AssetGroupListingGroupFilter) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetGroupListingGroupFilter.ProtoReflect.Descriptor instead.
func (*AssetGroupListingGroupFilter) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_rawDescGZIP(), []int{0}
}

func (x *AssetGroupListingGroupFilter) GetResourceName() string {
	if x != nil {
		return x.ResourceName
	}
	return ""
}

func (x *AssetGroupListingGroupFilter) GetAssetGroup() string {
	if x != nil {
		return x.AssetGroup
	}
	return ""
}

func (x *AssetGroupListingGroupFilter) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AssetGroupListingGroupFilter) GetType() enums.ListingGroupFilterTypeEnum_ListingGroupFilterType {
	if x != nil {
		return x.Type
	}
	return enums.ListingGroupFilterTypeEnum_ListingGroupFilterType(0)
}

func (x *AssetGroupListingGroupFilter) GetListingSource() enums.ListingGroupFilterListingSourceEnum_ListingGroupFilterListingSource {
	if x != nil {
		return x.ListingSource
	}
	return enums.ListingGroupFilterListingSourceEnum_ListingGroupFilterListingSource(0)
}

func (x *AssetGroupListingGroupFilter) GetCaseValue() *ListingGroupFilterDimension {
	if x != nil {
		return x.CaseValue
	}
	return nil
}

func (x *AssetGroupListingGroupFilter) GetParentListingGroupFilter() string {
	if x != nil {
		return x.ParentListingGroupFilter
	}
	return ""
}

func (x *AssetGroupListingGroupFilter) GetPath() *ListingGroupFilterDimensionPath {
	if x != nil {
		return x.Path
	}
	return nil
}

// The path defining of dimensions defining a listing group filter.
type ListingGroupFilterDimensionPath struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Output only. The complete path of dimensions through the listing group
	// filter hierarchy (excluding the root node) to this listing group filter.
	Dimensions []*ListingGroupFilterDimension `protobuf:"bytes,1,rep,name=dimensions,proto3" json:"dimensions,omitempty"`
}

func (x *ListingGroupFilterDimensionPath) Reset() {
	*x = ListingGroupFilterDimensionPath{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListingGroupFilterDimensionPath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListingGroupFilterDimensionPath) ProtoMessage() {}

func (x *ListingGroupFilterDimensionPath) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListingGroupFilterDimensionPath.ProtoReflect.Descriptor instead.
func (*ListingGroupFilterDimensionPath) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_rawDescGZIP(), []int{1}
}

func (x *ListingGroupFilterDimensionPath) GetDimensions() []*ListingGroupFilterDimension {
	if x != nil {
		return x.Dimensions
	}
	return nil
}

// Listing dimensions for the asset group listing group filter.
type ListingGroupFilterDimension struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Dimension of one of the types below is always present.
	//
	// Types that are assignable to Dimension:
	//
	//	*ListingGroupFilterDimension_ProductCategory_
	//	*ListingGroupFilterDimension_ProductBrand_
	//	*ListingGroupFilterDimension_ProductChannel_
	//	*ListingGroupFilterDimension_ProductCondition_
	//	*ListingGroupFilterDimension_ProductCustomAttribute_
	//	*ListingGroupFilterDimension_ProductItemId_
	//	*ListingGroupFilterDimension_ProductType_
	//	*ListingGroupFilterDimension_Webpage_
	Dimension isListingGroupFilterDimension_Dimension `protobuf_oneof:"dimension"`
}

func (x *ListingGroupFilterDimension) Reset() {
	*x = ListingGroupFilterDimension{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListingGroupFilterDimension) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListingGroupFilterDimension) ProtoMessage() {}

func (x *ListingGroupFilterDimension) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListingGroupFilterDimension.ProtoReflect.Descriptor instead.
func (*ListingGroupFilterDimension) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_rawDescGZIP(), []int{2}
}

func (m *ListingGroupFilterDimension) GetDimension() isListingGroupFilterDimension_Dimension {
	if m != nil {
		return m.Dimension
	}
	return nil
}

func (x *ListingGroupFilterDimension) GetProductCategory() *ListingGroupFilterDimension_ProductCategory {
	if x, ok := x.GetDimension().(*ListingGroupFilterDimension_ProductCategory_); ok {
		return x.ProductCategory
	}
	return nil
}

func (x *ListingGroupFilterDimension) GetProductBrand() *ListingGroupFilterDimension_ProductBrand {
	if x, ok := x.GetDimension().(*ListingGroupFilterDimension_ProductBrand_); ok {
		return x.ProductBrand
	}
	return nil
}

func (x *ListingGroupFilterDimension) GetProductChannel() *ListingGroupFilterDimension_ProductChannel {
	if x, ok := x.GetDimension().(*ListingGroupFilterDimension_ProductChannel_); ok {
		return x.ProductChannel
	}
	return nil
}

func (x *ListingGroupFilterDimension) GetProductCondition() *ListingGroupFilterDimension_ProductCondition {
	if x, ok := x.GetDimension().(*ListingGroupFilterDimension_ProductCondition_); ok {
		return x.ProductCondition
	}
	return nil
}

func (x *ListingGroupFilterDimension) GetProductCustomAttribute() *ListingGroupFilterDimension_ProductCustomAttribute {
	if x, ok := x.GetDimension().(*ListingGroupFilterDimension_ProductCustomAttribute_); ok {
		return x.ProductCustomAttribute
	}
	return nil
}

func (x *ListingGroupFilterDimension) GetProductItemId() *ListingGroupFilterDimension_ProductItemId {
	if x, ok := x.GetDimension().(*ListingGroupFilterDimension_ProductItemId_); ok {
		return x.ProductItemId
	}
	return nil
}

func (x *ListingGroupFilterDimension) GetProductType() *ListingGroupFilterDimension_ProductType {
	if x, ok := x.GetDimension().(*ListingGroupFilterDimension_ProductType_); ok {
		return x.ProductType
	}
	return nil
}

func (x *ListingGroupFilterDimension) GetWebpage() *ListingGroupFilterDimension_Webpage {
	if x, ok := x.GetDimension().(*ListingGroupFilterDimension_Webpage_); ok {
		return x.Webpage
	}
	return nil
}

type isListingGroupFilterDimension_Dimension interface {
	isListingGroupFilterDimension_Dimension()
}

type ListingGroupFilterDimension_ProductCategory_ struct {
	// Category of a product offer.
	ProductCategory *ListingGroupFilterDimension_ProductCategory `protobuf:"bytes,10,opt,name=product_category,json=productCategory,proto3,oneof"`
}

type ListingGroupFilterDimension_ProductBrand_ struct {
	// Brand of a product offer.
	ProductBrand *ListingGroupFilterDimension_ProductBrand `protobuf:"bytes,2,opt,name=product_brand,json=productBrand,proto3,oneof"`
}

type ListingGroupFilterDimension_ProductChannel_ struct {
	// Locality of a product offer.
	ProductChannel *ListingGroupFilterDimension_ProductChannel `protobuf:"bytes,3,opt,name=product_channel,json=productChannel,proto3,oneof"`
}

type ListingGroupFilterDimension_ProductCondition_ struct {
	// Condition of a product offer.
	ProductCondition *ListingGroupFilterDimension_ProductCondition `protobuf:"bytes,4,opt,name=product_condition,json=productCondition,proto3,oneof"`
}

type ListingGroupFilterDimension_ProductCustomAttribute_ struct {
	// Custom attribute of a product offer.
	ProductCustomAttribute *ListingGroupFilterDimension_ProductCustomAttribute `protobuf:"bytes,5,opt,name=product_custom_attribute,json=productCustomAttribute,proto3,oneof"`
}

type ListingGroupFilterDimension_ProductItemId_ struct {
	// Item id of a product offer.
	ProductItemId *ListingGroupFilterDimension_ProductItemId `protobuf:"bytes,6,opt,name=product_item_id,json=productItemId,proto3,oneof"`
}

type ListingGroupFilterDimension_ProductType_ struct {
	// Type of a product offer.
	ProductType *ListingGroupFilterDimension_ProductType `protobuf:"bytes,7,opt,name=product_type,json=productType,proto3,oneof"`
}

type ListingGroupFilterDimension_Webpage_ struct {
	// Filters for URLs in a page feed and URLs from the advertiser web domain.
	Webpage *ListingGroupFilterDimension_Webpage `protobuf:"bytes,9,opt,name=webpage,proto3,oneof"`
}

func (*ListingGroupFilterDimension_ProductCategory_) isListingGroupFilterDimension_Dimension() {}

func (*ListingGroupFilterDimension_ProductBrand_) isListingGroupFilterDimension_Dimension() {}

func (*ListingGroupFilterDimension_ProductChannel_) isListingGroupFilterDimension_Dimension() {}

func (*ListingGroupFilterDimension_ProductCondition_) isListingGroupFilterDimension_Dimension() {}

func (*ListingGroupFilterDimension_ProductCustomAttribute_) isListingGroupFilterDimension_Dimension() {
}

func (*ListingGroupFilterDimension_ProductItemId_) isListingGroupFilterDimension_Dimension() {}

func (*ListingGroupFilterDimension_ProductType_) isListingGroupFilterDimension_Dimension() {}

func (*ListingGroupFilterDimension_Webpage_) isListingGroupFilterDimension_Dimension() {}

// One element of a category at a certain level. Top-level categories
// are at level 1, their children at level 2, and so on. We currently support
// up to 5 levels. The user must specify a dimension type that indicates the
// level of the category. All cases of the same subdivision must have the same
// dimension type (category level).
type ListingGroupFilterDimension_ProductCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the product category.
	//
	// This ID is equivalent to the google_product_category ID as described in
	// this article: https://support.google.com/merchants/answer/6324436
	CategoryId *int64 `protobuf:"varint,1,opt,name=category_id,json=categoryId,proto3,oneof" json:"category_id,omitempty"`
	// Indicates the level of the category in the taxonomy.
	Level enums.ListingGroupFilterProductCategoryLevelEnum_ListingGroupFilterProductCategoryLevel `protobuf:"varint,2,opt,name=level,proto3,enum=google.ads.googleads.v15.enums.ListingGroupFilterProductCategoryLevelEnum_ListingGroupFilterProductCategoryLevel" json:"level,omitempty"`
}

func (x *ListingGroupFilterDimension_ProductCategory) Reset() {
	*x = ListingGroupFilterDimension_ProductCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListingGroupFilterDimension_ProductCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListingGroupFilterDimension_ProductCategory) ProtoMessage() {}

func (x *ListingGroupFilterDimension_ProductCategory) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListingGroupFilterDimension_ProductCategory.ProtoReflect.Descriptor instead.
func (*ListingGroupFilterDimension_ProductCategory) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_rawDescGZIP(), []int{2, 0}
}

func (x *ListingGroupFilterDimension_ProductCategory) GetCategoryId() int64 {
	if x != nil && x.CategoryId != nil {
		return *x.CategoryId
	}
	return 0
}

func (x *ListingGroupFilterDimension_ProductCategory) GetLevel() enums.ListingGroupFilterProductCategoryLevelEnum_ListingGroupFilterProductCategoryLevel {
	if x != nil {
		return x.Level
	}
	return enums.ListingGroupFilterProductCategoryLevelEnum_ListingGroupFilterProductCategoryLevel(0)
}

// Brand of the product.
type ListingGroupFilterDimension_ProductBrand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// String value of the product brand.
	Value *string `protobuf:"bytes,1,opt,name=value,proto3,oneof" json:"value,omitempty"`
}

func (x *ListingGroupFilterDimension_ProductBrand) Reset() {
	*x = ListingGroupFilterDimension_ProductBrand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListingGroupFilterDimension_ProductBrand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListingGroupFilterDimension_ProductBrand) ProtoMessage() {}

func (x *ListingGroupFilterDimension_ProductBrand) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListingGroupFilterDimension_ProductBrand.ProtoReflect.Descriptor instead.
func (*ListingGroupFilterDimension_ProductBrand) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_rawDescGZIP(), []int{2, 1}
}

func (x *ListingGroupFilterDimension_ProductBrand) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

// Locality of a product offer.
type ListingGroupFilterDimension_ProductChannel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Value of the locality.
	Channel enums.ListingGroupFilterProductChannelEnum_ListingGroupFilterProductChannel `protobuf:"varint,1,opt,name=channel,proto3,enum=google.ads.googleads.v15.enums.ListingGroupFilterProductChannelEnum_ListingGroupFilterProductChannel" json:"channel,omitempty"`
}

func (x *ListingGroupFilterDimension_ProductChannel) Reset() {
	*x = ListingGroupFilterDimension_ProductChannel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListingGroupFilterDimension_ProductChannel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListingGroupFilterDimension_ProductChannel) ProtoMessage() {}

func (x *ListingGroupFilterDimension_ProductChannel) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListingGroupFilterDimension_ProductChannel.ProtoReflect.Descriptor instead.
func (*ListingGroupFilterDimension_ProductChannel) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_rawDescGZIP(), []int{2, 2}
}

func (x *ListingGroupFilterDimension_ProductChannel) GetChannel() enums.ListingGroupFilterProductChannelEnum_ListingGroupFilterProductChannel {
	if x != nil {
		return x.Channel
	}
	return enums.ListingGroupFilterProductChannelEnum_ListingGroupFilterProductChannel(0)
}

// Condition of a product offer.
type ListingGroupFilterDimension_ProductCondition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Value of the condition.
	Condition enums.ListingGroupFilterProductConditionEnum_ListingGroupFilterProductCondition `protobuf:"varint,1,opt,name=condition,proto3,enum=google.ads.googleads.v15.enums.ListingGroupFilterProductConditionEnum_ListingGroupFilterProductCondition" json:"condition,omitempty"`
}

func (x *ListingGroupFilterDimension_ProductCondition) Reset() {
	*x = ListingGroupFilterDimension_ProductCondition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListingGroupFilterDimension_ProductCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListingGroupFilterDimension_ProductCondition) ProtoMessage() {}

func (x *ListingGroupFilterDimension_ProductCondition) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListingGroupFilterDimension_ProductCondition.ProtoReflect.Descriptor instead.
func (*ListingGroupFilterDimension_ProductCondition) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_rawDescGZIP(), []int{2, 3}
}

func (x *ListingGroupFilterDimension_ProductCondition) GetCondition() enums.ListingGroupFilterProductConditionEnum_ListingGroupFilterProductCondition {
	if x != nil {
		return x.Condition
	}
	return enums.ListingGroupFilterProductConditionEnum_ListingGroupFilterProductCondition(0)
}

// Custom attribute of a product offer.
type ListingGroupFilterDimension_ProductCustomAttribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// String value of the product custom attribute.
	Value *string `protobuf:"bytes,1,opt,name=value,proto3,oneof" json:"value,omitempty"`
	// Indicates the index of the custom attribute.
	Index enums.ListingGroupFilterCustomAttributeIndexEnum_ListingGroupFilterCustomAttributeIndex `protobuf:"varint,2,opt,name=index,proto3,enum=google.ads.googleads.v15.enums.ListingGroupFilterCustomAttributeIndexEnum_ListingGroupFilterCustomAttributeIndex" json:"index,omitempty"`
}

func (x *ListingGroupFilterDimension_ProductCustomAttribute) Reset() {
	*x = ListingGroupFilterDimension_ProductCustomAttribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListingGroupFilterDimension_ProductCustomAttribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListingGroupFilterDimension_ProductCustomAttribute) ProtoMessage() {}

func (x *ListingGroupFilterDimension_ProductCustomAttribute) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListingGroupFilterDimension_ProductCustomAttribute.ProtoReflect.Descriptor instead.
func (*ListingGroupFilterDimension_ProductCustomAttribute) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_rawDescGZIP(), []int{2, 4}
}

func (x *ListingGroupFilterDimension_ProductCustomAttribute) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

func (x *ListingGroupFilterDimension_ProductCustomAttribute) GetIndex() enums.ListingGroupFilterCustomAttributeIndexEnum_ListingGroupFilterCustomAttributeIndex {
	if x != nil {
		return x.Index
	}
	return enums.ListingGroupFilterCustomAttributeIndexEnum_ListingGroupFilterCustomAttributeIndex(0)
}

// Item id of a product offer.
type ListingGroupFilterDimension_ProductItemId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Value of the id.
	Value *string `protobuf:"bytes,1,opt,name=value,proto3,oneof" json:"value,omitempty"`
}

func (x *ListingGroupFilterDimension_ProductItemId) Reset() {
	*x = ListingGroupFilterDimension_ProductItemId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListingGroupFilterDimension_ProductItemId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListingGroupFilterDimension_ProductItemId) ProtoMessage() {}

func (x *ListingGroupFilterDimension_ProductItemId) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListingGroupFilterDimension_ProductItemId.ProtoReflect.Descriptor instead.
func (*ListingGroupFilterDimension_ProductItemId) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_rawDescGZIP(), []int{2, 5}
}

func (x *ListingGroupFilterDimension_ProductItemId) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

// Type of a product offer.
type ListingGroupFilterDimension_ProductType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Value of the type.
	Value *string `protobuf:"bytes,1,opt,name=value,proto3,oneof" json:"value,omitempty"`
	// Level of the type.
	Level enums.ListingGroupFilterProductTypeLevelEnum_ListingGroupFilterProductTypeLevel `protobuf:"varint,2,opt,name=level,proto3,enum=google.ads.googleads.v15.enums.ListingGroupFilterProductTypeLevelEnum_ListingGroupFilterProductTypeLevel" json:"level,omitempty"`
}

func (x *ListingGroupFilterDimension_ProductType) Reset() {
	*x = ListingGroupFilterDimension_ProductType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListingGroupFilterDimension_ProductType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListingGroupFilterDimension_ProductType) ProtoMessage() {}

func (x *ListingGroupFilterDimension_ProductType) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListingGroupFilterDimension_ProductType.ProtoReflect.Descriptor instead.
func (*ListingGroupFilterDimension_ProductType) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_rawDescGZIP(), []int{2, 6}
}

func (x *ListingGroupFilterDimension_ProductType) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

func (x *ListingGroupFilterDimension_ProductType) GetLevel() enums.ListingGroupFilterProductTypeLevelEnum_ListingGroupFilterProductTypeLevel {
	if x != nil {
		return x.Level
	}
	return enums.ListingGroupFilterProductTypeLevelEnum_ListingGroupFilterProductTypeLevel(0)
}

// Filters for URLs in a page feed and URLs from the advertiser web domain.
// Several root nodes with this dimension are allowed in an asset group and
// their conditions are considered in OR.
type ListingGroupFilterDimension_Webpage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The webpage conditions are case sensitive and these are and-ed together
	// when evaluated for filtering. All the conditions should be of same type.
	// Example1: for URL1 = www.ads.google.com?ocid=1&euid=2
	// and URL2 = www.ads.google.com?ocid=1
	// and with "ocid" and "euid" as url_contains conditions,
	// URL1 will be matched, but URL2 not.
	//
	// Example2 : If URL1 has Label1, Label2 and URL2 has Label2, Label3, then
	// with Label1 and Label2 as custom_label conditions, URL1 will be matched
	// but not URL2.
	// With Label2 as the only custom_label condition then both URL1 and URL2
	// will be matched.
	Conditions []*ListingGroupFilterDimension_WebpageCondition `protobuf:"bytes,1,rep,name=conditions,proto3" json:"conditions,omitempty"`
}

func (x *ListingGroupFilterDimension_Webpage) Reset() {
	*x = ListingGroupFilterDimension_Webpage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListingGroupFilterDimension_Webpage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListingGroupFilterDimension_Webpage) ProtoMessage() {}

func (x *ListingGroupFilterDimension_Webpage) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListingGroupFilterDimension_Webpage.ProtoReflect.Descriptor instead.
func (*ListingGroupFilterDimension_Webpage) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_rawDescGZIP(), []int{2, 7}
}

func (x *ListingGroupFilterDimension_Webpage) GetConditions() []*ListingGroupFilterDimension_WebpageCondition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

// Matching condition for URL filtering.
type ListingGroupFilterDimension_WebpageCondition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Condition for filtering the URLs.
	//
	// Types that are assignable to Condition:
	//
	//	*ListingGroupFilterDimension_WebpageCondition_CustomLabel
	//	*ListingGroupFilterDimension_WebpageCondition_UrlContains
	Condition isListingGroupFilterDimension_WebpageCondition_Condition `protobuf_oneof:"condition"`
}

func (x *ListingGroupFilterDimension_WebpageCondition) Reset() {
	*x = ListingGroupFilterDimension_WebpageCondition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListingGroupFilterDimension_WebpageCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListingGroupFilterDimension_WebpageCondition) ProtoMessage() {}

func (x *ListingGroupFilterDimension_WebpageCondition) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListingGroupFilterDimension_WebpageCondition.ProtoReflect.Descriptor instead.
func (*ListingGroupFilterDimension_WebpageCondition) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_rawDescGZIP(), []int{2, 8}
}

func (m *ListingGroupFilterDimension_WebpageCondition) GetCondition() isListingGroupFilterDimension_WebpageCondition_Condition {
	if m != nil {
		return m.Condition
	}
	return nil
}

func (x *ListingGroupFilterDimension_WebpageCondition) GetCustomLabel() string {
	if x, ok := x.GetCondition().(*ListingGroupFilterDimension_WebpageCondition_CustomLabel); ok {
		return x.CustomLabel
	}
	return ""
}

func (x *ListingGroupFilterDimension_WebpageCondition) GetUrlContains() string {
	if x, ok := x.GetCondition().(*ListingGroupFilterDimension_WebpageCondition_UrlContains); ok {
		return x.UrlContains
	}
	return ""
}

type isListingGroupFilterDimension_WebpageCondition_Condition interface {
	isListingGroupFilterDimension_WebpageCondition_Condition()
}

type ListingGroupFilterDimension_WebpageCondition_CustomLabel struct {
	// Filters the URLs in a page feed that have this custom label. A custom
	// label can be added to a campaign by creating an AssetSet of type
	// PAGE_FEED and linking it to the campaign using CampaignAssetSet.
	CustomLabel string `protobuf:"bytes,1,opt,name=custom_label,json=customLabel,proto3,oneof"`
}

type ListingGroupFilterDimension_WebpageCondition_UrlContains struct {
	// Filters the URLs in a page feed and the URLs from the advertiser web
	// domain that contain this string.
	UrlContains string `protobuf:"bytes,2,opt,name=url_contains,json=urlContains,proto3,oneof"`
}

func (*ListingGroupFilterDimension_WebpageCondition_CustomLabel) isListingGroupFilterDimension_WebpageCondition_Condition() {
}

func (*ListingGroupFilterDimension_WebpageCondition_UrlContains) isListingGroupFilterDimension_WebpageCondition_Condition() {
}

var File_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto protoreflect.FileDescriptor

var file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_rawDesc = []byte{
	0x0a, 0x49, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x64, 0x73, 0x2f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2f, 0x76, 0x31, 0x35, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x22, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64,
	0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x1a,
	0x50, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x64, 0x73, 0x2f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x61, 0x64, 0x73, 0x2f, 0x76, 0x31, 0x35, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f,
	0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x48, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x64, 0x73, 0x2f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2f, 0x76, 0x31, 0x35, 0x2f, 0x65, 0x6e, 0x75, 0x6d,
	0x73, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x50, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x64, 0x73, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64,
	0x73, 0x2f, 0x76, 0x31, 0x35, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x6c, 0x69, 0x73, 0x74,
	0x69, 0x6e, 0x67, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x49, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x64, 0x73, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x61, 0x64, 0x73, 0x2f, 0x76, 0x31, 0x35, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x6c, 0x69,
	0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x4b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x64, 0x73, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2f, 0x76,
	0x31, 0x35, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67,
	0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x4c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x64,
	0x73, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2f, 0x76, 0x31, 0x35, 0x2f,
	0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x43, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x64, 0x73, 0x2f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2f, 0x76, 0x31, 0x35, 0x2f, 0x65, 0x6e,
	0x75, 0x6d, 0x73, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x65, 0x6e,
	0x75, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76,
	0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbf, 0x07, 0x0a, 0x1c, 0x41, 0x73, 0x73, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x62, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x3d, 0xe0, 0x41,
	0x05, 0xfa, 0x41, 0x37, 0x0a, 0x35, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0c, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4c, 0x0a, 0x0b, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2b,
	0xe0, 0x41, 0x05, 0xfa, 0x41, 0x25, 0x0a, 0x23, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64,
	0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x41, 0x73, 0x73, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0a, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x6a, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x51, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64,
	0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x69, 0x6e, 0x67, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x42, 0x03, 0xe0,
	0x41, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x8f, 0x01, 0x0a, 0x0e, 0x6c, 0x69, 0x73,
	0x74, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x63, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x65, 0x6e, 0x75,
	0x6d, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x03, 0xe0, 0x41, 0x05, 0x52, 0x0d, 0x6c, 0x69, 0x73,
	0x74, 0x69, 0x6e, 0x67, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x5e, 0x0a, 0x0a, 0x63, 0x61,
	0x73, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x09, 0x63, 0x61, 0x73, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x7c, 0x0a, 0x1b, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x3d, 0xe0, 0x41, 0x05, 0xfa, 0x41, 0x37, 0x0a, 0x35, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61,
	0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x41, 0x73, 0x73, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74,
	0x69, 0x6e, 0x67, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x18,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x5c, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31,
	0x35, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x69, 0x6e, 0x67, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x44, 0x69,
	0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x42, 0x03, 0xe0, 0x41, 0x03,
	0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x3a, 0x9d, 0x01, 0xea, 0x41, 0x99, 0x01, 0x0a, 0x35, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x41, 0x73, 0x73, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x60, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x2f,
	0x7b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x7d, 0x7e, 0x7b, 0x6c, 0x69,
	0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x22, 0x87, 0x01, 0x0a, 0x1f, 0x4c, 0x69, 0x73, 0x74, 0x69,
	0x6e, 0x67, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x44, 0x69, 0x6d,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x12, 0x64, 0x0a, 0x0a, 0x64, 0x69,
	0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x42,
	0x03, 0xe0, 0x41, 0x03, 0x52, 0x0a, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0xd8, 0x11, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x7c, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4f, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64,
	0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x48, 0x00, 0x52, 0x0f, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x73,
	0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61,
	0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x35,
	0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x69,
	0x6e, 0x67, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x44, 0x69, 0x6d,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x72,
	0x61, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x72,
	0x61, 0x6e, 0x64, 0x12, 0x79, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x48, 0x00, 0x52, 0x0e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x7f,
	0x0a, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x50, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73,
	0x2e, 0x76, 0x31, 0x35, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x10, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x92, 0x01, 0x0a, 0x18, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x56, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x48, 0x00, 0x52, 0x16, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x12, 0x77, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4d, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x48, 0x00, 0x52, 0x0d,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x70, 0x0a,
	0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x4b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x44, 0x69, 0x6d, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x48, 0x00, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x63, 0x0a, 0x07, 0x77, 0x65, 0x62, 0x70, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x47, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x2e, 0x57, 0x65, 0x62, 0x70, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x07, 0x77, 0x65, 0x62,
	0x70, 0x61, 0x67, 0x65, 0x1a, 0xd1, 0x01, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x24, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52,
	0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x87,
	0x01, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x71,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x69,
	0x6e, 0x67, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x1a, 0x33, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x19, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x91, 0x01,
	0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x12, 0x7f, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x65, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x65, 0x6e, 0x75,
	0x6d, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x1a, 0x9c, 0x01, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x87, 0x01, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x69, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64,
	0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x69, 0x6e, 0x67, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e,
	0x75, 0x6d, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x1a, 0xc7, 0x01, 0x0a, 0x16, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x88, 0x01, 0x01, 0x12, 0x87, 0x01, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x71, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31,
	0x35, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x45, 0x6e,
	0x75, 0x6d, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x34, 0x0a, 0x0d, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x1a, 0xb3, 0x01, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x19, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x88, 0x01, 0x01, 0x12, 0x7f, 0x0a, 0x05, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x69, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64,
	0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x69, 0x6e, 0x67, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x45, 0x6e,
	0x75, 0x6d, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x42, 0x08, 0x0a, 0x06,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x7b, 0x0a, 0x07, 0x57, 0x65, 0x62, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x70, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x50, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61,
	0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x35,
	0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x69,
	0x6e, 0x67, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x44, 0x69, 0x6d,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x57, 0x65, 0x62, 0x70, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x1a, 0x69, 0x0a, 0x10, 0x57, 0x65, 0x62, 0x70, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x23, 0x0a, 0x0c,
	0x75, 0x72, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x75, 0x72, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x73, 0x42, 0x0b, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0b,
	0x0a, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x93, 0x02, 0x0a, 0x26,
	0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x42, 0x21, 0x41, 0x73, 0x73, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x4b, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x67,
	0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70,
	0x69, 0x73, 0x2f, 0x61, 0x64, 0x73, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73,
	0x2f, 0x76, 0x31, 0x35, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x3b, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0xa2, 0x02, 0x03, 0x47, 0x41, 0x41, 0xaa, 0x02,
	0x22, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x41, 0x64, 0x73, 0x2e, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x41, 0x64, 0x73, 0x2e, 0x56, 0x31, 0x35, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0xca, 0x02, 0x22, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x5c, 0x41, 0x64, 0x73,
	0x5c, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x64, 0x73, 0x5c, 0x56, 0x31, 0x35, 0x5c, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0xea, 0x02, 0x26, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x3a, 0x3a, 0x41, 0x64, 0x73, 0x3a, 0x3a, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x64,
	0x73, 0x3a, 0x3a, 0x56, 0x31, 0x35, 0x3a, 0x3a, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_rawDescOnce sync.Once
	file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_rawDescData = file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_rawDesc
)

func file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_rawDescGZIP() []byte {
	file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_rawDescOnce.Do(func() {
		file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_rawDescData = protoimpl.X.CompressGZIP(file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_rawDescData)
	})
	return file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_rawDescData
}

var file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_goTypes = []interface{}{
	(*AssetGroupListingGroupFilter)(nil),                                                         // 0: google.ads.googleads.v15.resources.AssetGroupListingGroupFilter
	(*ListingGroupFilterDimensionPath)(nil),                                                      // 1: google.ads.googleads.v15.resources.ListingGroupFilterDimensionPath
	(*ListingGroupFilterDimension)(nil),                                                          // 2: google.ads.googleads.v15.resources.ListingGroupFilterDimension
	(*ListingGroupFilterDimension_ProductCategory)(nil),                                          // 3: google.ads.googleads.v15.resources.ListingGroupFilterDimension.ProductCategory
	(*ListingGroupFilterDimension_ProductBrand)(nil),                                             // 4: google.ads.googleads.v15.resources.ListingGroupFilterDimension.ProductBrand
	(*ListingGroupFilterDimension_ProductChannel)(nil),                                           // 5: google.ads.googleads.v15.resources.ListingGroupFilterDimension.ProductChannel
	(*ListingGroupFilterDimension_ProductCondition)(nil),                                         // 6: google.ads.googleads.v15.resources.ListingGroupFilterDimension.ProductCondition
	(*ListingGroupFilterDimension_ProductCustomAttribute)(nil),                                   // 7: google.ads.googleads.v15.resources.ListingGroupFilterDimension.ProductCustomAttribute
	(*ListingGroupFilterDimension_ProductItemId)(nil),                                            // 8: google.ads.googleads.v15.resources.ListingGroupFilterDimension.ProductItemId
	(*ListingGroupFilterDimension_ProductType)(nil),                                              // 9: google.ads.googleads.v15.resources.ListingGroupFilterDimension.ProductType
	(*ListingGroupFilterDimension_Webpage)(nil),                                                  // 10: google.ads.googleads.v15.resources.ListingGroupFilterDimension.Webpage
	(*ListingGroupFilterDimension_WebpageCondition)(nil),                                         // 11: google.ads.googleads.v15.resources.ListingGroupFilterDimension.WebpageCondition
	(enums.ListingGroupFilterTypeEnum_ListingGroupFilterType)(0),                                 // 12: google.ads.googleads.v15.enums.ListingGroupFilterTypeEnum.ListingGroupFilterType
	(enums.ListingGroupFilterListingSourceEnum_ListingGroupFilterListingSource)(0),               // 13: google.ads.googleads.v15.enums.ListingGroupFilterListingSourceEnum.ListingGroupFilterListingSource
	(enums.ListingGroupFilterProductCategoryLevelEnum_ListingGroupFilterProductCategoryLevel)(0), // 14: google.ads.googleads.v15.enums.ListingGroupFilterProductCategoryLevelEnum.ListingGroupFilterProductCategoryLevel
	(enums.ListingGroupFilterProductChannelEnum_ListingGroupFilterProductChannel)(0),             // 15: google.ads.googleads.v15.enums.ListingGroupFilterProductChannelEnum.ListingGroupFilterProductChannel
	(enums.ListingGroupFilterProductConditionEnum_ListingGroupFilterProductCondition)(0),         // 16: google.ads.googleads.v15.enums.ListingGroupFilterProductConditionEnum.ListingGroupFilterProductCondition
	(enums.ListingGroupFilterCustomAttributeIndexEnum_ListingGroupFilterCustomAttributeIndex)(0), // 17: google.ads.googleads.v15.enums.ListingGroupFilterCustomAttributeIndexEnum.ListingGroupFilterCustomAttributeIndex
	(enums.ListingGroupFilterProductTypeLevelEnum_ListingGroupFilterProductTypeLevel)(0),         // 18: google.ads.googleads.v15.enums.ListingGroupFilterProductTypeLevelEnum.ListingGroupFilterProductTypeLevel
}
var file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_depIdxs = []int32{
	12, // 0: google.ads.googleads.v15.resources.AssetGroupListingGroupFilter.type:type_name -> google.ads.googleads.v15.enums.ListingGroupFilterTypeEnum.ListingGroupFilterType
	13, // 1: google.ads.googleads.v15.resources.AssetGroupListingGroupFilter.listing_source:type_name -> google.ads.googleads.v15.enums.ListingGroupFilterListingSourceEnum.ListingGroupFilterListingSource
	2,  // 2: google.ads.googleads.v15.resources.AssetGroupListingGroupFilter.case_value:type_name -> google.ads.googleads.v15.resources.ListingGroupFilterDimension
	1,  // 3: google.ads.googleads.v15.resources.AssetGroupListingGroupFilter.path:type_name -> google.ads.googleads.v15.resources.ListingGroupFilterDimensionPath
	2,  // 4: google.ads.googleads.v15.resources.ListingGroupFilterDimensionPath.dimensions:type_name -> google.ads.googleads.v15.resources.ListingGroupFilterDimension
	3,  // 5: google.ads.googleads.v15.resources.ListingGroupFilterDimension.product_category:type_name -> google.ads.googleads.v15.resources.ListingGroupFilterDimension.ProductCategory
	4,  // 6: google.ads.googleads.v15.resources.ListingGroupFilterDimension.product_brand:type_name -> google.ads.googleads.v15.resources.ListingGroupFilterDimension.ProductBrand
	5,  // 7: google.ads.googleads.v15.resources.ListingGroupFilterDimension.product_channel:type_name -> google.ads.googleads.v15.resources.ListingGroupFilterDimension.ProductChannel
	6,  // 8: google.ads.googleads.v15.resources.ListingGroupFilterDimension.product_condition:type_name -> google.ads.googleads.v15.resources.ListingGroupFilterDimension.ProductCondition
	7,  // 9: google.ads.googleads.v15.resources.ListingGroupFilterDimension.product_custom_attribute:type_name -> google.ads.googleads.v15.resources.ListingGroupFilterDimension.ProductCustomAttribute
	8,  // 10: google.ads.googleads.v15.resources.ListingGroupFilterDimension.product_item_id:type_name -> google.ads.googleads.v15.resources.ListingGroupFilterDimension.ProductItemId
	9,  // 11: google.ads.googleads.v15.resources.ListingGroupFilterDimension.product_type:type_name -> google.ads.googleads.v15.resources.ListingGroupFilterDimension.ProductType
	10, // 12: google.ads.googleads.v15.resources.ListingGroupFilterDimension.webpage:type_name -> google.ads.googleads.v15.resources.ListingGroupFilterDimension.Webpage
	14, // 13: google.ads.googleads.v15.resources.ListingGroupFilterDimension.ProductCategory.level:type_name -> google.ads.googleads.v15.enums.ListingGroupFilterProductCategoryLevelEnum.ListingGroupFilterProductCategoryLevel
	15, // 14: google.ads.googleads.v15.resources.ListingGroupFilterDimension.ProductChannel.channel:type_name -> google.ads.googleads.v15.enums.ListingGroupFilterProductChannelEnum.ListingGroupFilterProductChannel
	16, // 15: google.ads.googleads.v15.resources.ListingGroupFilterDimension.ProductCondition.condition:type_name -> google.ads.googleads.v15.enums.ListingGroupFilterProductConditionEnum.ListingGroupFilterProductCondition
	17, // 16: google.ads.googleads.v15.resources.ListingGroupFilterDimension.ProductCustomAttribute.index:type_name -> google.ads.googleads.v15.enums.ListingGroupFilterCustomAttributeIndexEnum.ListingGroupFilterCustomAttributeIndex
	18, // 17: google.ads.googleads.v15.resources.ListingGroupFilterDimension.ProductType.level:type_name -> google.ads.googleads.v15.enums.ListingGroupFilterProductTypeLevelEnum.ListingGroupFilterProductTypeLevel
	11, // 18: google.ads.googleads.v15.resources.ListingGroupFilterDimension.Webpage.conditions:type_name -> google.ads.googleads.v15.resources.ListingGroupFilterDimension.WebpageCondition
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_init() }
func file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_init() {
	if File_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetGroupListingGroupFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListingGroupFilterDimensionPath); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListingGroupFilterDimension); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListingGroupFilterDimension_ProductCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListingGroupFilterDimension_ProductBrand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListingGroupFilterDimension_ProductChannel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListingGroupFilterDimension_ProductCondition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListingGroupFilterDimension_ProductCustomAttribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListingGroupFilterDimension_ProductItemId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListingGroupFilterDimension_ProductType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListingGroupFilterDimension_Webpage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListingGroupFilterDimension_WebpageCondition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*ListingGroupFilterDimension_ProductCategory_)(nil),
		(*ListingGroupFilterDimension_ProductBrand_)(nil),
		(*ListingGroupFilterDimension_ProductChannel_)(nil),
		(*ListingGroupFilterDimension_ProductCondition_)(nil),
		(*ListingGroupFilterDimension_ProductCustomAttribute_)(nil),
		(*ListingGroupFilterDimension_ProductItemId_)(nil),
		(*ListingGroupFilterDimension_ProductType_)(nil),
		(*ListingGroupFilterDimension_Webpage_)(nil),
	}
	file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*ListingGroupFilterDimension_WebpageCondition_CustomLabel)(nil),
		(*ListingGroupFilterDimension_WebpageCondition_UrlContains)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_goTypes,
		DependencyIndexes: file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_depIdxs,
		MessageInfos:      file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_msgTypes,
	}.Build()
	File_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto = out.File
	file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_rawDesc = nil
	file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_goTypes = nil
	file_google_ads_googleads_v15_resources_asset_group_listing_group_filter_proto_depIdxs = nil
}
