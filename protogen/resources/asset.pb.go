// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.1
// source: google/ads/googleads/v15/resources/asset.proto

package resources

import (
	common "github.com/Optable/google-ads-pb/protogen/common"
	enums "github.com/Optable/google-ads-pb/protogen/enums"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Asset is a part of an ad which can be shared across multiple ads.
// It can be an image (ImageAsset), a video (YoutubeVideoAsset), etc.
// Assets are immutable and cannot be removed. To stop an asset from serving,
// remove the asset from the entity that is using it.
type Asset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Immutable. The resource name of the asset.
	// Asset resource names have the form:
	//
	// `customers/{customer_id}/assets/{asset_id}`
	ResourceName string `protobuf:"bytes,1,opt,name=resource_name,json=resourceName,proto3" json:"resource_name,omitempty"`
	// Output only. The ID of the asset.
	Id *int64 `protobuf:"varint,11,opt,name=id,proto3,oneof" json:"id,omitempty"`
	// Optional name of the asset.
	Name *string `protobuf:"bytes,12,opt,name=name,proto3,oneof" json:"name,omitempty"`
	// Output only. Type of the asset.
	Type enums.AssetTypeEnum_AssetType `protobuf:"varint,4,opt,name=type,proto3,enum=google.ads.googleads.v15.enums.AssetTypeEnum_AssetType" json:"type,omitempty"`
	// A list of possible final URLs after all cross domain redirects.
	FinalUrls []string `protobuf:"bytes,14,rep,name=final_urls,json=finalUrls,proto3" json:"final_urls,omitempty"`
	// A list of possible final mobile URLs after all cross domain redirects.
	FinalMobileUrls []string `protobuf:"bytes,16,rep,name=final_mobile_urls,json=finalMobileUrls,proto3" json:"final_mobile_urls,omitempty"`
	// URL template for constructing a tracking URL.
	TrackingUrlTemplate *string `protobuf:"bytes,17,opt,name=tracking_url_template,json=trackingUrlTemplate,proto3,oneof" json:"tracking_url_template,omitempty"`
	// A list of mappings to be used for substituting URL custom parameter tags in
	// the tracking_url_template, final_urls, and/or final_mobile_urls.
	UrlCustomParameters []*common.CustomParameter `protobuf:"bytes,18,rep,name=url_custom_parameters,json=urlCustomParameters,proto3" json:"url_custom_parameters,omitempty"`
	// URL template for appending params to landing page URLs served with parallel
	// tracking.
	FinalUrlSuffix *string `protobuf:"bytes,19,opt,name=final_url_suffix,json=finalUrlSuffix,proto3,oneof" json:"final_url_suffix,omitempty"`
	// Output only. Source of the asset.
	Source enums.AssetSourceEnum_AssetSource `protobuf:"varint,38,opt,name=source,proto3,enum=google.ads.googleads.v15.enums.AssetSourceEnum_AssetSource" json:"source,omitempty"`
	// Output only. Policy information for the asset.
	PolicySummary *AssetPolicySummary `protobuf:"bytes,13,opt,name=policy_summary,json=policySummary,proto3" json:"policy_summary,omitempty"`
	// Output only. Policy information for the asset for each FieldType.
	FieldTypePolicySummaries []*AssetFieldTypePolicySummary `protobuf:"bytes,40,rep,name=field_type_policy_summaries,json=fieldTypePolicySummaries,proto3" json:"field_type_policy_summaries,omitempty"`
	// The specific type of the asset.
	//
	// Types that are assignable to AssetData:
	//
	//	*Asset_YoutubeVideoAsset
	//	*Asset_MediaBundleAsset
	//	*Asset_ImageAsset
	//	*Asset_TextAsset
	//	*Asset_LeadFormAsset
	//	*Asset_BookOnGoogleAsset
	//	*Asset_PromotionAsset
	//	*Asset_CalloutAsset
	//	*Asset_StructuredSnippetAsset
	//	*Asset_SitelinkAsset
	//	*Asset_PageFeedAsset
	//	*Asset_DynamicEducationAsset
	//	*Asset_MobileAppAsset
	//	*Asset_HotelCalloutAsset
	//	*Asset_CallAsset
	//	*Asset_PriceAsset
	//	*Asset_CallToActionAsset
	//	*Asset_DynamicRealEstateAsset
	//	*Asset_DynamicCustomAsset
	//	*Asset_DynamicHotelsAndRentalsAsset
	//	*Asset_DynamicFlightsAsset
	//	*Asset_DiscoveryCarouselCardAsset
	//	*Asset_DynamicTravelAsset
	//	*Asset_DynamicLocalAsset
	//	*Asset_DynamicJobsAsset
	//	*Asset_LocationAsset
	//	*Asset_HotelPropertyAsset
	AssetData isAsset_AssetData `protobuf_oneof:"asset_data"`
}

func (x *Asset) Reset() {
	*x = Asset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_ads_googleads_v15_resources_asset_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Asset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Asset) ProtoMessage() {}

func (x *Asset) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v15_resources_asset_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Asset.ProtoReflect.Descriptor instead.
func (*Asset) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v15_resources_asset_proto_rawDescGZIP(), []int{0}
}

func (x *Asset) GetResourceName() string {
	if x != nil {
		return x.ResourceName
	}
	return ""
}

func (x *Asset) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *Asset) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Asset) GetType() enums.AssetTypeEnum_AssetType {
	if x != nil {
		return x.Type
	}
	return enums.AssetTypeEnum_AssetType(0)
}

func (x *Asset) GetFinalUrls() []string {
	if x != nil {
		return x.FinalUrls
	}
	return nil
}

func (x *Asset) GetFinalMobileUrls() []string {
	if x != nil {
		return x.FinalMobileUrls
	}
	return nil
}

func (x *Asset) GetTrackingUrlTemplate() string {
	if x != nil && x.TrackingUrlTemplate != nil {
		return *x.TrackingUrlTemplate
	}
	return ""
}

func (x *Asset) GetUrlCustomParameters() []*common.CustomParameter {
	if x != nil {
		return x.UrlCustomParameters
	}
	return nil
}

func (x *Asset) GetFinalUrlSuffix() string {
	if x != nil && x.FinalUrlSuffix != nil {
		return *x.FinalUrlSuffix
	}
	return ""
}

func (x *Asset) GetSource() enums.AssetSourceEnum_AssetSource {
	if x != nil {
		return x.Source
	}
	return enums.AssetSourceEnum_AssetSource(0)
}

func (x *Asset) GetPolicySummary() *AssetPolicySummary {
	if x != nil {
		return x.PolicySummary
	}
	return nil
}

func (x *Asset) GetFieldTypePolicySummaries() []*AssetFieldTypePolicySummary {
	if x != nil {
		return x.FieldTypePolicySummaries
	}
	return nil
}

func (m *Asset) GetAssetData() isAsset_AssetData {
	if m != nil {
		return m.AssetData
	}
	return nil
}

func (x *Asset) GetYoutubeVideoAsset() *common.YoutubeVideoAsset {
	if x, ok := x.GetAssetData().(*Asset_YoutubeVideoAsset); ok {
		return x.YoutubeVideoAsset
	}
	return nil
}

func (x *Asset) GetMediaBundleAsset() *common.MediaBundleAsset {
	if x, ok := x.GetAssetData().(*Asset_MediaBundleAsset); ok {
		return x.MediaBundleAsset
	}
	return nil
}

func (x *Asset) GetImageAsset() *common.ImageAsset {
	if x, ok := x.GetAssetData().(*Asset_ImageAsset); ok {
		return x.ImageAsset
	}
	return nil
}

func (x *Asset) GetTextAsset() *common.TextAsset {
	if x, ok := x.GetAssetData().(*Asset_TextAsset); ok {
		return x.TextAsset
	}
	return nil
}

func (x *Asset) GetLeadFormAsset() *common.LeadFormAsset {
	if x, ok := x.GetAssetData().(*Asset_LeadFormAsset); ok {
		return x.LeadFormAsset
	}
	return nil
}

func (x *Asset) GetBookOnGoogleAsset() *common.BookOnGoogleAsset {
	if x, ok := x.GetAssetData().(*Asset_BookOnGoogleAsset); ok {
		return x.BookOnGoogleAsset
	}
	return nil
}

func (x *Asset) GetPromotionAsset() *common.PromotionAsset {
	if x, ok := x.GetAssetData().(*Asset_PromotionAsset); ok {
		return x.PromotionAsset
	}
	return nil
}

func (x *Asset) GetCalloutAsset() *common.CalloutAsset {
	if x, ok := x.GetAssetData().(*Asset_CalloutAsset); ok {
		return x.CalloutAsset
	}
	return nil
}

func (x *Asset) GetStructuredSnippetAsset() *common.StructuredSnippetAsset {
	if x, ok := x.GetAssetData().(*Asset_StructuredSnippetAsset); ok {
		return x.StructuredSnippetAsset
	}
	return nil
}

func (x *Asset) GetSitelinkAsset() *common.SitelinkAsset {
	if x, ok := x.GetAssetData().(*Asset_SitelinkAsset); ok {
		return x.SitelinkAsset
	}
	return nil
}

func (x *Asset) GetPageFeedAsset() *common.PageFeedAsset {
	if x, ok := x.GetAssetData().(*Asset_PageFeedAsset); ok {
		return x.PageFeedAsset
	}
	return nil
}

func (x *Asset) GetDynamicEducationAsset() *common.DynamicEducationAsset {
	if x, ok := x.GetAssetData().(*Asset_DynamicEducationAsset); ok {
		return x.DynamicEducationAsset
	}
	return nil
}

func (x *Asset) GetMobileAppAsset() *common.MobileAppAsset {
	if x, ok := x.GetAssetData().(*Asset_MobileAppAsset); ok {
		return x.MobileAppAsset
	}
	return nil
}

func (x *Asset) GetHotelCalloutAsset() *common.HotelCalloutAsset {
	if x, ok := x.GetAssetData().(*Asset_HotelCalloutAsset); ok {
		return x.HotelCalloutAsset
	}
	return nil
}

func (x *Asset) GetCallAsset() *common.CallAsset {
	if x, ok := x.GetAssetData().(*Asset_CallAsset); ok {
		return x.CallAsset
	}
	return nil
}

func (x *Asset) GetPriceAsset() *common.PriceAsset {
	if x, ok := x.GetAssetData().(*Asset_PriceAsset); ok {
		return x.PriceAsset
	}
	return nil
}

func (x *Asset) GetCallToActionAsset() *common.CallToActionAsset {
	if x, ok := x.GetAssetData().(*Asset_CallToActionAsset); ok {
		return x.CallToActionAsset
	}
	return nil
}

func (x *Asset) GetDynamicRealEstateAsset() *common.DynamicRealEstateAsset {
	if x, ok := x.GetAssetData().(*Asset_DynamicRealEstateAsset); ok {
		return x.DynamicRealEstateAsset
	}
	return nil
}

func (x *Asset) GetDynamicCustomAsset() *common.DynamicCustomAsset {
	if x, ok := x.GetAssetData().(*Asset_DynamicCustomAsset); ok {
		return x.DynamicCustomAsset
	}
	return nil
}

func (x *Asset) GetDynamicHotelsAndRentalsAsset() *common.DynamicHotelsAndRentalsAsset {
	if x, ok := x.GetAssetData().(*Asset_DynamicHotelsAndRentalsAsset); ok {
		return x.DynamicHotelsAndRentalsAsset
	}
	return nil
}

func (x *Asset) GetDynamicFlightsAsset() *common.DynamicFlightsAsset {
	if x, ok := x.GetAssetData().(*Asset_DynamicFlightsAsset); ok {
		return x.DynamicFlightsAsset
	}
	return nil
}

func (x *Asset) GetDiscoveryCarouselCardAsset() *common.DiscoveryCarouselCardAsset {
	if x, ok := x.GetAssetData().(*Asset_DiscoveryCarouselCardAsset); ok {
		return x.DiscoveryCarouselCardAsset
	}
	return nil
}

func (x *Asset) GetDynamicTravelAsset() *common.DynamicTravelAsset {
	if x, ok := x.GetAssetData().(*Asset_DynamicTravelAsset); ok {
		return x.DynamicTravelAsset
	}
	return nil
}

func (x *Asset) GetDynamicLocalAsset() *common.DynamicLocalAsset {
	if x, ok := x.GetAssetData().(*Asset_DynamicLocalAsset); ok {
		return x.DynamicLocalAsset
	}
	return nil
}

func (x *Asset) GetDynamicJobsAsset() *common.DynamicJobsAsset {
	if x, ok := x.GetAssetData().(*Asset_DynamicJobsAsset); ok {
		return x.DynamicJobsAsset
	}
	return nil
}

func (x *Asset) GetLocationAsset() *common.LocationAsset {
	if x, ok := x.GetAssetData().(*Asset_LocationAsset); ok {
		return x.LocationAsset
	}
	return nil
}

func (x *Asset) GetHotelPropertyAsset() *common.HotelPropertyAsset {
	if x, ok := x.GetAssetData().(*Asset_HotelPropertyAsset); ok {
		return x.HotelPropertyAsset
	}
	return nil
}

type isAsset_AssetData interface {
	isAsset_AssetData()
}

type Asset_YoutubeVideoAsset struct {
	// Immutable. A YouTube video asset.
	YoutubeVideoAsset *common.YoutubeVideoAsset `protobuf:"bytes,5,opt,name=youtube_video_asset,json=youtubeVideoAsset,proto3,oneof"`
}

type Asset_MediaBundleAsset struct {
	// Immutable. A media bundle asset.
	MediaBundleAsset *common.MediaBundleAsset `protobuf:"bytes,6,opt,name=media_bundle_asset,json=mediaBundleAsset,proto3,oneof"`
}

type Asset_ImageAsset struct {
	// Output only. An image asset.
	ImageAsset *common.ImageAsset `protobuf:"bytes,7,opt,name=image_asset,json=imageAsset,proto3,oneof"`
}

type Asset_TextAsset struct {
	// Immutable. A text asset.
	TextAsset *common.TextAsset `protobuf:"bytes,8,opt,name=text_asset,json=textAsset,proto3,oneof"`
}

type Asset_LeadFormAsset struct {
	// A lead form asset.
	LeadFormAsset *common.LeadFormAsset `protobuf:"bytes,9,opt,name=lead_form_asset,json=leadFormAsset,proto3,oneof"`
}

type Asset_BookOnGoogleAsset struct {
	// A book on google asset.
	BookOnGoogleAsset *common.BookOnGoogleAsset `protobuf:"bytes,10,opt,name=book_on_google_asset,json=bookOnGoogleAsset,proto3,oneof"`
}

type Asset_PromotionAsset struct {
	// A promotion asset.
	PromotionAsset *common.PromotionAsset `protobuf:"bytes,15,opt,name=promotion_asset,json=promotionAsset,proto3,oneof"`
}

type Asset_CalloutAsset struct {
	// A callout asset.
	CalloutAsset *common.CalloutAsset `protobuf:"bytes,20,opt,name=callout_asset,json=calloutAsset,proto3,oneof"`
}

type Asset_StructuredSnippetAsset struct {
	// A structured snippet asset.
	StructuredSnippetAsset *common.StructuredSnippetAsset `protobuf:"bytes,21,opt,name=structured_snippet_asset,json=structuredSnippetAsset,proto3,oneof"`
}

type Asset_SitelinkAsset struct {
	// A sitelink asset.
	SitelinkAsset *common.SitelinkAsset `protobuf:"bytes,22,opt,name=sitelink_asset,json=sitelinkAsset,proto3,oneof"`
}

type Asset_PageFeedAsset struct {
	// A page feed asset.
	PageFeedAsset *common.PageFeedAsset `protobuf:"bytes,23,opt,name=page_feed_asset,json=pageFeedAsset,proto3,oneof"`
}

type Asset_DynamicEducationAsset struct {
	// A dynamic education asset.
	DynamicEducationAsset *common.DynamicEducationAsset `protobuf:"bytes,24,opt,name=dynamic_education_asset,json=dynamicEducationAsset,proto3,oneof"`
}

type Asset_MobileAppAsset struct {
	// A mobile app asset.
	MobileAppAsset *common.MobileAppAsset `protobuf:"bytes,25,opt,name=mobile_app_asset,json=mobileAppAsset,proto3,oneof"`
}

type Asset_HotelCalloutAsset struct {
	// A hotel callout asset.
	HotelCalloutAsset *common.HotelCalloutAsset `protobuf:"bytes,26,opt,name=hotel_callout_asset,json=hotelCalloutAsset,proto3,oneof"`
}

type Asset_CallAsset struct {
	// A call asset.
	CallAsset *common.CallAsset `protobuf:"bytes,27,opt,name=call_asset,json=callAsset,proto3,oneof"`
}

type Asset_PriceAsset struct {
	// A price asset.
	PriceAsset *common.PriceAsset `protobuf:"bytes,28,opt,name=price_asset,json=priceAsset,proto3,oneof"`
}

type Asset_CallToActionAsset struct {
	// Immutable. A call to action asset.
	CallToActionAsset *common.CallToActionAsset `protobuf:"bytes,29,opt,name=call_to_action_asset,json=callToActionAsset,proto3,oneof"`
}

type Asset_DynamicRealEstateAsset struct {
	// A dynamic real estate asset.
	DynamicRealEstateAsset *common.DynamicRealEstateAsset `protobuf:"bytes,30,opt,name=dynamic_real_estate_asset,json=dynamicRealEstateAsset,proto3,oneof"`
}

type Asset_DynamicCustomAsset struct {
	// A dynamic custom asset.
	DynamicCustomAsset *common.DynamicCustomAsset `protobuf:"bytes,31,opt,name=dynamic_custom_asset,json=dynamicCustomAsset,proto3,oneof"`
}

type Asset_DynamicHotelsAndRentalsAsset struct {
	// A dynamic hotels and rentals asset.
	DynamicHotelsAndRentalsAsset *common.DynamicHotelsAndRentalsAsset `protobuf:"bytes,32,opt,name=dynamic_hotels_and_rentals_asset,json=dynamicHotelsAndRentalsAsset,proto3,oneof"`
}

type Asset_DynamicFlightsAsset struct {
	// A dynamic flights asset.
	DynamicFlightsAsset *common.DynamicFlightsAsset `protobuf:"bytes,33,opt,name=dynamic_flights_asset,json=dynamicFlightsAsset,proto3,oneof"`
}

type Asset_DiscoveryCarouselCardAsset struct {
	// Immutable. A discovery carousel card asset.
	DiscoveryCarouselCardAsset *common.DiscoveryCarouselCardAsset `protobuf:"bytes,34,opt,name=discovery_carousel_card_asset,json=discoveryCarouselCardAsset,proto3,oneof"`
}

type Asset_DynamicTravelAsset struct {
	// A dynamic travel asset.
	DynamicTravelAsset *common.DynamicTravelAsset `protobuf:"bytes,35,opt,name=dynamic_travel_asset,json=dynamicTravelAsset,proto3,oneof"`
}

type Asset_DynamicLocalAsset struct {
	// A dynamic local asset.
	DynamicLocalAsset *common.DynamicLocalAsset `protobuf:"bytes,36,opt,name=dynamic_local_asset,json=dynamicLocalAsset,proto3,oneof"`
}

type Asset_DynamicJobsAsset struct {
	// A dynamic jobs asset.
	DynamicJobsAsset *common.DynamicJobsAsset `protobuf:"bytes,37,opt,name=dynamic_jobs_asset,json=dynamicJobsAsset,proto3,oneof"`
}

type Asset_LocationAsset struct {
	// Output only. A location asset.
	LocationAsset *common.LocationAsset `protobuf:"bytes,39,opt,name=location_asset,json=locationAsset,proto3,oneof"`
}

type Asset_HotelPropertyAsset struct {
	// Immutable. A hotel property asset.
	HotelPropertyAsset *common.HotelPropertyAsset `protobuf:"bytes,41,opt,name=hotel_property_asset,json=hotelPropertyAsset,proto3,oneof"`
}

func (*Asset_YoutubeVideoAsset) isAsset_AssetData() {}

func (*Asset_MediaBundleAsset) isAsset_AssetData() {}

func (*Asset_ImageAsset) isAsset_AssetData() {}

func (*Asset_TextAsset) isAsset_AssetData() {}

func (*Asset_LeadFormAsset) isAsset_AssetData() {}

func (*Asset_BookOnGoogleAsset) isAsset_AssetData() {}

func (*Asset_PromotionAsset) isAsset_AssetData() {}

func (*Asset_CalloutAsset) isAsset_AssetData() {}

func (*Asset_StructuredSnippetAsset) isAsset_AssetData() {}

func (*Asset_SitelinkAsset) isAsset_AssetData() {}

func (*Asset_PageFeedAsset) isAsset_AssetData() {}

func (*Asset_DynamicEducationAsset) isAsset_AssetData() {}

func (*Asset_MobileAppAsset) isAsset_AssetData() {}

func (*Asset_HotelCalloutAsset) isAsset_AssetData() {}

func (*Asset_CallAsset) isAsset_AssetData() {}

func (*Asset_PriceAsset) isAsset_AssetData() {}

func (*Asset_CallToActionAsset) isAsset_AssetData() {}

func (*Asset_DynamicRealEstateAsset) isAsset_AssetData() {}

func (*Asset_DynamicCustomAsset) isAsset_AssetData() {}

func (*Asset_DynamicHotelsAndRentalsAsset) isAsset_AssetData() {}

func (*Asset_DynamicFlightsAsset) isAsset_AssetData() {}

func (*Asset_DiscoveryCarouselCardAsset) isAsset_AssetData() {}

func (*Asset_DynamicTravelAsset) isAsset_AssetData() {}

func (*Asset_DynamicLocalAsset) isAsset_AssetData() {}

func (*Asset_DynamicJobsAsset) isAsset_AssetData() {}

func (*Asset_LocationAsset) isAsset_AssetData() {}

func (*Asset_HotelPropertyAsset) isAsset_AssetData() {}

// Contains policy information for an asset under AssetFieldType context.
type AssetFieldTypePolicySummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Output only. FieldType of this asset.
	AssetFieldType *enums.AssetFieldTypeEnum_AssetFieldType `protobuf:"varint,1,opt,name=asset_field_type,json=assetFieldType,proto3,enum=google.ads.googleads.v15.enums.AssetFieldTypeEnum_AssetFieldType,oneof" json:"asset_field_type,omitempty"`
	// Output only. Source of this asset.
	AssetSource *enums.AssetSourceEnum_AssetSource `protobuf:"varint,2,opt,name=asset_source,json=assetSource,proto3,enum=google.ads.googleads.v15.enums.AssetSourceEnum_AssetSource,oneof" json:"asset_source,omitempty"`
	// Output only. Policy summary.
	PolicySummaryInfo *AssetPolicySummary `protobuf:"bytes,3,opt,name=policy_summary_info,json=policySummaryInfo,proto3,oneof" json:"policy_summary_info,omitempty"`
}

func (x *AssetFieldTypePolicySummary) Reset() {
	*x = AssetFieldTypePolicySummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_ads_googleads_v15_resources_asset_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetFieldTypePolicySummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetFieldTypePolicySummary) ProtoMessage() {}

func (x *AssetFieldTypePolicySummary) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v15_resources_asset_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetFieldTypePolicySummary.ProtoReflect.Descriptor instead.
func (*AssetFieldTypePolicySummary) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v15_resources_asset_proto_rawDescGZIP(), []int{1}
}

func (x *AssetFieldTypePolicySummary) GetAssetFieldType() enums.AssetFieldTypeEnum_AssetFieldType {
	if x != nil && x.AssetFieldType != nil {
		return *x.AssetFieldType
	}
	return enums.AssetFieldTypeEnum_AssetFieldType(0)
}

func (x *AssetFieldTypePolicySummary) GetAssetSource() enums.AssetSourceEnum_AssetSource {
	if x != nil && x.AssetSource != nil {
		return *x.AssetSource
	}
	return enums.AssetSourceEnum_AssetSource(0)
}

func (x *AssetFieldTypePolicySummary) GetPolicySummaryInfo() *AssetPolicySummary {
	if x != nil {
		return x.PolicySummaryInfo
	}
	return nil
}

// Contains policy information for an asset.
type AssetPolicySummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Output only. The list of policy findings for this asset.
	PolicyTopicEntries []*common.PolicyTopicEntry `protobuf:"bytes,1,rep,name=policy_topic_entries,json=policyTopicEntries,proto3" json:"policy_topic_entries,omitempty"`
	// Output only. Where in the review process this asset is.
	ReviewStatus enums.PolicyReviewStatusEnum_PolicyReviewStatus `protobuf:"varint,2,opt,name=review_status,json=reviewStatus,proto3,enum=google.ads.googleads.v15.enums.PolicyReviewStatusEnum_PolicyReviewStatus" json:"review_status,omitempty"`
	// Output only. The overall approval status of this asset, calculated based on
	// the status of its individual policy topic entries.
	ApprovalStatus enums.PolicyApprovalStatusEnum_PolicyApprovalStatus `protobuf:"varint,3,opt,name=approval_status,json=approvalStatus,proto3,enum=google.ads.googleads.v15.enums.PolicyApprovalStatusEnum_PolicyApprovalStatus" json:"approval_status,omitempty"`
}

func (x *AssetPolicySummary) Reset() {
	*x = AssetPolicySummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_ads_googleads_v15_resources_asset_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetPolicySummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetPolicySummary) ProtoMessage() {}

func (x *AssetPolicySummary) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v15_resources_asset_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetPolicySummary.ProtoReflect.Descriptor instead.
func (*AssetPolicySummary) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v15_resources_asset_proto_rawDescGZIP(), []int{2}
}

func (x *AssetPolicySummary) GetPolicyTopicEntries() []*common.PolicyTopicEntry {
	if x != nil {
		return x.PolicyTopicEntries
	}
	return nil
}

func (x *AssetPolicySummary) GetReviewStatus() enums.PolicyReviewStatusEnum_PolicyReviewStatus {
	if x != nil {
		return x.ReviewStatus
	}
	return enums.PolicyReviewStatusEnum_PolicyReviewStatus(0)
}

func (x *AssetPolicySummary) GetApprovalStatus() enums.PolicyApprovalStatusEnum_PolicyApprovalStatus {
	if x != nil {
		return x.ApprovalStatus
	}
	return enums.PolicyApprovalStatusEnum_PolicyApprovalStatus(0)
}

var File_google_ads_googleads_v15_resources_asset_proto protoreflect.FileDescriptor

var file_google_ads_googleads_v15_resources_asset_proto_rawDesc = []byte{
	0x0a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x64, 0x73, 0x2f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2f, 0x76, 0x31, 0x35, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x22, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x1a, 0x31, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x64, 0x73,
	0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2f, 0x76, 0x31, 0x35, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x36, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x64, 0x73, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2f, 0x76, 0x31,
	0x35, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x2c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x64, 0x73, 0x2f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x61, 0x64, 0x73, 0x2f, 0x76, 0x31, 0x35, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x35, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x64, 0x73, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x61, 0x64, 0x73, 0x2f, 0x76, 0x31, 0x35, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x31, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x64, 0x73,
	0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2f, 0x76, 0x31, 0x35, 0x2f, 0x65,
	0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x64, 0x73, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2f, 0x76, 0x31,
	0x35, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x64, 0x73, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2f, 0x76,
	0x31, 0x35, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f,
	0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x39, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x64,
	0x73, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2f, 0x76, 0x31, 0x35, 0x2f,
	0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x81, 0x1d, 0x0a,
	0x05, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x4b, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x26, 0xe0,
	0x41, 0x05, 0xfa, 0x41, 0x20, 0x0a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x03, 0xe0, 0x41, 0x03, 0x48, 0x01, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x50, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64,
	0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e,
	0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x45,
	0x6e, 0x75, 0x6d, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x42, 0x03, 0xe0,
	0x41, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x61,
	0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69,
	0x6e, 0x61, 0x6c, 0x55, 0x72, 0x6c, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x66, 0x69, 0x6e, 0x61, 0x6c,
	0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x10, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0f, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x55,
	0x72, 0x6c, 0x73, 0x12, 0x37, 0x0a, 0x15, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f,
	0x75, 0x72, 0x6c, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x03, 0x52, 0x13, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x55, 0x72,
	0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x64, 0x0a, 0x15,
	0x75, 0x72, 0x6c, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61,
	0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x13, 0x75,
	0x72, 0x6c, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x12, 0x2d, 0x0a, 0x10, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x5f,
	0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0e,
	0x66, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x72, 0x6c, 0x53, 0x75, 0x66, 0x66, 0x69, 0x78, 0x88, 0x01,
	0x01, 0x12, 0x58, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x26, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x3b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x65, 0x6e, 0x75,
	0x6d, 0x73, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x6e,
	0x75, 0x6d, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x03,
	0xe0, 0x41, 0x03, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x62, 0x0a, 0x0e, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x42, 0x03, 0xe0, 0x41, 0x03,
	0x52, 0x0d, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12,
	0x83, 0x01, 0x0a, 0x1b, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x65, 0x73, 0x18,
	0x28, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61,
	0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x35,
	0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x18, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x69, 0x65, 0x73, 0x12, 0x69, 0x0a, 0x13, 0x79, 0x6f, 0x75, 0x74, 0x75, 0x62, 0x65,
	0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x32, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x59, 0x6f, 0x75, 0x74, 0x75, 0x62, 0x65, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x41, 0x73, 0x73, 0x65, 0x74, 0x42, 0x03, 0xe0, 0x41, 0x05, 0x48, 0x00, 0x52, 0x11, 0x79,
	0x6f, 0x75, 0x74, 0x75, 0x62, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x12, 0x66, 0x0a, 0x12, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65,
	0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x42,
	0x03, 0xe0, 0x41, 0x05, 0x48, 0x00, 0x52, 0x10, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x42, 0x75, 0x6e,
	0x64, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x53, 0x0a, 0x0b, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x48,
	0x00, 0x52, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x50, 0x0a,
	0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x42, 0x03, 0xe0,
	0x41, 0x05, 0x48, 0x00, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12,
	0x58, 0x0a, 0x0f, 0x6c, 0x65, 0x61, 0x64, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e,
	0x76, 0x31, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x46,
	0x6f, 0x72, 0x6d, 0x41, 0x73, 0x73, 0x65, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x6c, 0x65, 0x61, 0x64,
	0x46, 0x6f, 0x72, 0x6d, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x65, 0x0a, 0x14, 0x62, 0x6f, 0x6f,
	0x6b, 0x5f, 0x6f, 0x6e, 0x5f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76,
	0x31, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x4f, 0x6e,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x48, 0x00, 0x52, 0x11, 0x62,
	0x6f, 0x6f, 0x6b, 0x4f, 0x6e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x12, 0x5a, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73,
	0x2e, 0x76, 0x31, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x70, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x54, 0x0a, 0x0d,
	0x63, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x12, 0x73, 0x0a, 0x18, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x64,
	0x5f, 0x73, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64,
	0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x64, 0x53, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x48, 0x00, 0x52,
	0x16, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x64, 0x53, 0x6e, 0x69, 0x70, 0x70,
	0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x57, 0x0a, 0x0e, 0x73, 0x69, 0x74, 0x65, 0x6c,
	0x69, 0x6e, 0x6b, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x53, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x6e, 0x6b, 0x41, 0x73, 0x73, 0x65, 0x74, 0x48,
	0x00, 0x52, 0x0d, 0x73, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x6e, 0x6b, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x12, 0x58, 0x0a, 0x0f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73,
	0x2e, 0x76, 0x31, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65,
	0x46, 0x65, 0x65, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x70, 0x61, 0x67,
	0x65, 0x46, 0x65, 0x65, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x70, 0x0a, 0x17, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x65, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61,
	0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x45, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x48, 0x00, 0x52, 0x15, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x45, 0x64,
	0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x5b, 0x0a, 0x10,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31,
	0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x41,
	0x70, 0x70, 0x41, 0x73, 0x73, 0x65, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x41, 0x70, 0x70, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x64, 0x0a, 0x13, 0x68, 0x6f, 0x74,
	0x65, 0x6c, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31,
	0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x43, 0x61,
	0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x48, 0x00, 0x52, 0x11, 0x68, 0x6f,
	0x74, 0x65, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12,
	0x4b, 0x0a, 0x0a, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x1b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x41, 0x73, 0x73, 0x65, 0x74, 0x48,
	0x00, 0x52, 0x09, 0x63, 0x61, 0x6c, 0x6c, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x4e, 0x0a, 0x0b,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x1c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x48, 0x00,
	0x52, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x6a, 0x0a, 0x14,
	0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x6f, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64,
	0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x61, 0x6c,
	0x6c, 0x54, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x42, 0x03,
	0xe0, 0x41, 0x05, 0x48, 0x00, 0x52, 0x11, 0x63, 0x61, 0x6c, 0x6c, 0x54, 0x6f, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x74, 0x0a, 0x19, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61,
	0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x52, 0x65, 0x61, 0x6c, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x48, 0x00, 0x52, 0x16, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x52,
	0x65, 0x61, 0x6c, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x67,
	0x0a, 0x14, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x48, 0x00, 0x52, 0x12, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x87, 0x01, 0x0a, 0x20, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x5f, 0x68, 0x6f, 0x74, 0x65, 0x6c, 0x73, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x72,
	0x65, 0x6e, 0x74, 0x61, 0x6c, 0x73, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x20, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x48, 0x6f, 0x74, 0x65,
	0x6c, 0x73, 0x41, 0x6e, 0x64, 0x52, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x73, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x48, 0x00, 0x52, 0x1c, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x48, 0x6f, 0x74, 0x65,
	0x6c, 0x73, 0x41, 0x6e, 0x64, 0x52, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x73, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x12, 0x6a, 0x0a, 0x15, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x66, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x73, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x34, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74,
	0x73, 0x41, 0x73, 0x73, 0x65, 0x74, 0x48, 0x00, 0x52, 0x13, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x85, 0x01,
	0x0a, 0x1d, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x63, 0x61, 0x72, 0x6f,
	0x75, 0x73, 0x65, 0x6c, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18,
	0x22, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61,
	0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x35,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x79, 0x43, 0x61, 0x72, 0x6f, 0x75, 0x73, 0x65, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x42, 0x03, 0xe0, 0x41, 0x05, 0x48, 0x00, 0x52, 0x1a, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x79, 0x43, 0x61, 0x72, 0x6f, 0x75, 0x73, 0x65, 0x6c, 0x43, 0x61, 0x72, 0x64,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x67, 0x0a, 0x14, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x5f, 0x74, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x23, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x54, 0x72, 0x61,
	0x76, 0x65, 0x6c, 0x41, 0x73, 0x73, 0x65, 0x74, 0x48, 0x00, 0x52, 0x12, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x64,
	0x0a, 0x13, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x24, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61,
	0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x41, 0x73, 0x73, 0x65, 0x74, 0x48,
	0x00, 0x52, 0x11, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x12, 0x61, 0x0a, 0x12, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f,
	0x6a, 0x6f, 0x62, 0x73, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x25, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x31, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4a, 0x6f, 0x62, 0x73, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x48, 0x00, 0x52, 0x10, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4a, 0x6f,
	0x62, 0x73, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x5c, 0x0a, 0x0e, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x27, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x42,
	0x03, 0xe0, 0x41, 0x03, 0x48, 0x00, 0x52, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x6c, 0x0a, 0x14, 0x68, 0x6f, 0x74, 0x65, 0x6c, 0x5f, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x29, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x41, 0x73, 0x73, 0x65, 0x74, 0x42, 0x03, 0xe0, 0x41, 0x05, 0x48, 0x00, 0x52,
	0x12, 0x68, 0x6f, 0x74, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x3a, 0x4e, 0xea, 0x41, 0x4b, 0x0a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x29, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x73, 0x2f, 0x7b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x7d, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2f, 0x7b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f,
	0x69, 0x64, 0x7d, 0x42, 0x0c, 0x0a, 0x0a, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x75,
	0x72, 0x6c, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x42, 0x13, 0x0a, 0x11, 0x5f,
	0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x5f, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78,
	0x22, 0xae, 0x03, 0x0a, 0x1b, 0x41, 0x73, 0x73, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x12, 0x75, 0x0a, 0x10, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x41, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64,
	0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x42, 0x03, 0xe0,
	0x41, 0x03, 0x48, 0x00, 0x52, 0x0e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x68, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3b, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x48,
	0x01, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x70, 0x0a, 0x13, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x73, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x48, 0x02, 0x52, 0x11, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x88, 0x01, 0x01, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x22, 0xf0, 0x02, 0x0a, 0x12, 0x41, 0x73, 0x73, 0x65, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x68, 0x0a, 0x14, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31,
	0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x12,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x45, 0x6e, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x12, 0x73, 0x0a, 0x0d, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x49, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73,
	0x2e, 0x76, 0x31, 0x35, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x6e, 0x75,
	0x6d, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0c, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x7b, 0x0a, 0x0f, 0x61, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x4d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x65, 0x6e, 0x75, 0x6d,
	0x73, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42,
	0x03, 0xe0, 0x41, 0x03, 0x52, 0x0e, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x42, 0xfc, 0x01, 0x0a, 0x26, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64,
	0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x42,
	0x0a, 0x41, 0x73, 0x73, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x4b, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x61, 0x70, 0x69, 0x73, 0x2f, 0x61, 0x64, 0x73, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61,
	0x64, 0x73, 0x2f, 0x76, 0x31, 0x35, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x3b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0xa2, 0x02, 0x03, 0x47, 0x41, 0x41,
	0xaa, 0x02, 0x22, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x41, 0x64, 0x73, 0x2e, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x41, 0x64, 0x73, 0x2e, 0x56, 0x31, 0x35, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0xca, 0x02, 0x22, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x5c, 0x41,
	0x64, 0x73, 0x5c, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x64, 0x73, 0x5c, 0x56, 0x31, 0x35,
	0x5c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0xea, 0x02, 0x26, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x3a, 0x3a, 0x41, 0x64, 0x73, 0x3a, 0x3a, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x41, 0x64, 0x73, 0x3a, 0x3a, 0x56, 0x31, 0x35, 0x3a, 0x3a, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_google_ads_googleads_v15_resources_asset_proto_rawDescOnce sync.Once
	file_google_ads_googleads_v15_resources_asset_proto_rawDescData = file_google_ads_googleads_v15_resources_asset_proto_rawDesc
)

func file_google_ads_googleads_v15_resources_asset_proto_rawDescGZIP() []byte {
	file_google_ads_googleads_v15_resources_asset_proto_rawDescOnce.Do(func() {
		file_google_ads_googleads_v15_resources_asset_proto_rawDescData = protoimpl.X.CompressGZIP(file_google_ads_googleads_v15_resources_asset_proto_rawDescData)
	})
	return file_google_ads_googleads_v15_resources_asset_proto_rawDescData
}

var file_google_ads_googleads_v15_resources_asset_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_google_ads_googleads_v15_resources_asset_proto_goTypes = []interface{}{
	(*Asset)(nil),                                            // 0: google.ads.googleads.v15.resources.Asset
	(*AssetFieldTypePolicySummary)(nil),                      // 1: google.ads.googleads.v15.resources.AssetFieldTypePolicySummary
	(*AssetPolicySummary)(nil),                               // 2: google.ads.googleads.v15.resources.AssetPolicySummary
	(enums.AssetTypeEnum_AssetType)(0),                       // 3: google.ads.googleads.v15.enums.AssetTypeEnum.AssetType
	(*common.CustomParameter)(nil),                           // 4: google.ads.googleads.v15.common.CustomParameter
	(enums.AssetSourceEnum_AssetSource)(0),                   // 5: google.ads.googleads.v15.enums.AssetSourceEnum.AssetSource
	(*common.YoutubeVideoAsset)(nil),                         // 6: google.ads.googleads.v15.common.YoutubeVideoAsset
	(*common.MediaBundleAsset)(nil),                          // 7: google.ads.googleads.v15.common.MediaBundleAsset
	(*common.ImageAsset)(nil),                                // 8: google.ads.googleads.v15.common.ImageAsset
	(*common.TextAsset)(nil),                                 // 9: google.ads.googleads.v15.common.TextAsset
	(*common.LeadFormAsset)(nil),                             // 10: google.ads.googleads.v15.common.LeadFormAsset
	(*common.BookOnGoogleAsset)(nil),                         // 11: google.ads.googleads.v15.common.BookOnGoogleAsset
	(*common.PromotionAsset)(nil),                            // 12: google.ads.googleads.v15.common.PromotionAsset
	(*common.CalloutAsset)(nil),                              // 13: google.ads.googleads.v15.common.CalloutAsset
	(*common.StructuredSnippetAsset)(nil),                    // 14: google.ads.googleads.v15.common.StructuredSnippetAsset
	(*common.SitelinkAsset)(nil),                             // 15: google.ads.googleads.v15.common.SitelinkAsset
	(*common.PageFeedAsset)(nil),                             // 16: google.ads.googleads.v15.common.PageFeedAsset
	(*common.DynamicEducationAsset)(nil),                     // 17: google.ads.googleads.v15.common.DynamicEducationAsset
	(*common.MobileAppAsset)(nil),                            // 18: google.ads.googleads.v15.common.MobileAppAsset
	(*common.HotelCalloutAsset)(nil),                         // 19: google.ads.googleads.v15.common.HotelCalloutAsset
	(*common.CallAsset)(nil),                                 // 20: google.ads.googleads.v15.common.CallAsset
	(*common.PriceAsset)(nil),                                // 21: google.ads.googleads.v15.common.PriceAsset
	(*common.CallToActionAsset)(nil),                         // 22: google.ads.googleads.v15.common.CallToActionAsset
	(*common.DynamicRealEstateAsset)(nil),                    // 23: google.ads.googleads.v15.common.DynamicRealEstateAsset
	(*common.DynamicCustomAsset)(nil),                        // 24: google.ads.googleads.v15.common.DynamicCustomAsset
	(*common.DynamicHotelsAndRentalsAsset)(nil),              // 25: google.ads.googleads.v15.common.DynamicHotelsAndRentalsAsset
	(*common.DynamicFlightsAsset)(nil),                       // 26: google.ads.googleads.v15.common.DynamicFlightsAsset
	(*common.DiscoveryCarouselCardAsset)(nil),                // 27: google.ads.googleads.v15.common.DiscoveryCarouselCardAsset
	(*common.DynamicTravelAsset)(nil),                        // 28: google.ads.googleads.v15.common.DynamicTravelAsset
	(*common.DynamicLocalAsset)(nil),                         // 29: google.ads.googleads.v15.common.DynamicLocalAsset
	(*common.DynamicJobsAsset)(nil),                          // 30: google.ads.googleads.v15.common.DynamicJobsAsset
	(*common.LocationAsset)(nil),                             // 31: google.ads.googleads.v15.common.LocationAsset
	(*common.HotelPropertyAsset)(nil),                        // 32: google.ads.googleads.v15.common.HotelPropertyAsset
	(enums.AssetFieldTypeEnum_AssetFieldType)(0),             // 33: google.ads.googleads.v15.enums.AssetFieldTypeEnum.AssetFieldType
	(*common.PolicyTopicEntry)(nil),                          // 34: google.ads.googleads.v15.common.PolicyTopicEntry
	(enums.PolicyReviewStatusEnum_PolicyReviewStatus)(0),     // 35: google.ads.googleads.v15.enums.PolicyReviewStatusEnum.PolicyReviewStatus
	(enums.PolicyApprovalStatusEnum_PolicyApprovalStatus)(0), // 36: google.ads.googleads.v15.enums.PolicyApprovalStatusEnum.PolicyApprovalStatus
}
var file_google_ads_googleads_v15_resources_asset_proto_depIdxs = []int32{
	3,  // 0: google.ads.googleads.v15.resources.Asset.type:type_name -> google.ads.googleads.v15.enums.AssetTypeEnum.AssetType
	4,  // 1: google.ads.googleads.v15.resources.Asset.url_custom_parameters:type_name -> google.ads.googleads.v15.common.CustomParameter
	5,  // 2: google.ads.googleads.v15.resources.Asset.source:type_name -> google.ads.googleads.v15.enums.AssetSourceEnum.AssetSource
	2,  // 3: google.ads.googleads.v15.resources.Asset.policy_summary:type_name -> google.ads.googleads.v15.resources.AssetPolicySummary
	1,  // 4: google.ads.googleads.v15.resources.Asset.field_type_policy_summaries:type_name -> google.ads.googleads.v15.resources.AssetFieldTypePolicySummary
	6,  // 5: google.ads.googleads.v15.resources.Asset.youtube_video_asset:type_name -> google.ads.googleads.v15.common.YoutubeVideoAsset
	7,  // 6: google.ads.googleads.v15.resources.Asset.media_bundle_asset:type_name -> google.ads.googleads.v15.common.MediaBundleAsset
	8,  // 7: google.ads.googleads.v15.resources.Asset.image_asset:type_name -> google.ads.googleads.v15.common.ImageAsset
	9,  // 8: google.ads.googleads.v15.resources.Asset.text_asset:type_name -> google.ads.googleads.v15.common.TextAsset
	10, // 9: google.ads.googleads.v15.resources.Asset.lead_form_asset:type_name -> google.ads.googleads.v15.common.LeadFormAsset
	11, // 10: google.ads.googleads.v15.resources.Asset.book_on_google_asset:type_name -> google.ads.googleads.v15.common.BookOnGoogleAsset
	12, // 11: google.ads.googleads.v15.resources.Asset.promotion_asset:type_name -> google.ads.googleads.v15.common.PromotionAsset
	13, // 12: google.ads.googleads.v15.resources.Asset.callout_asset:type_name -> google.ads.googleads.v15.common.CalloutAsset
	14, // 13: google.ads.googleads.v15.resources.Asset.structured_snippet_asset:type_name -> google.ads.googleads.v15.common.StructuredSnippetAsset
	15, // 14: google.ads.googleads.v15.resources.Asset.sitelink_asset:type_name -> google.ads.googleads.v15.common.SitelinkAsset
	16, // 15: google.ads.googleads.v15.resources.Asset.page_feed_asset:type_name -> google.ads.googleads.v15.common.PageFeedAsset
	17, // 16: google.ads.googleads.v15.resources.Asset.dynamic_education_asset:type_name -> google.ads.googleads.v15.common.DynamicEducationAsset
	18, // 17: google.ads.googleads.v15.resources.Asset.mobile_app_asset:type_name -> google.ads.googleads.v15.common.MobileAppAsset
	19, // 18: google.ads.googleads.v15.resources.Asset.hotel_callout_asset:type_name -> google.ads.googleads.v15.common.HotelCalloutAsset
	20, // 19: google.ads.googleads.v15.resources.Asset.call_asset:type_name -> google.ads.googleads.v15.common.CallAsset
	21, // 20: google.ads.googleads.v15.resources.Asset.price_asset:type_name -> google.ads.googleads.v15.common.PriceAsset
	22, // 21: google.ads.googleads.v15.resources.Asset.call_to_action_asset:type_name -> google.ads.googleads.v15.common.CallToActionAsset
	23, // 22: google.ads.googleads.v15.resources.Asset.dynamic_real_estate_asset:type_name -> google.ads.googleads.v15.common.DynamicRealEstateAsset
	24, // 23: google.ads.googleads.v15.resources.Asset.dynamic_custom_asset:type_name -> google.ads.googleads.v15.common.DynamicCustomAsset
	25, // 24: google.ads.googleads.v15.resources.Asset.dynamic_hotels_and_rentals_asset:type_name -> google.ads.googleads.v15.common.DynamicHotelsAndRentalsAsset
	26, // 25: google.ads.googleads.v15.resources.Asset.dynamic_flights_asset:type_name -> google.ads.googleads.v15.common.DynamicFlightsAsset
	27, // 26: google.ads.googleads.v15.resources.Asset.discovery_carousel_card_asset:type_name -> google.ads.googleads.v15.common.DiscoveryCarouselCardAsset
	28, // 27: google.ads.googleads.v15.resources.Asset.dynamic_travel_asset:type_name -> google.ads.googleads.v15.common.DynamicTravelAsset
	29, // 28: google.ads.googleads.v15.resources.Asset.dynamic_local_asset:type_name -> google.ads.googleads.v15.common.DynamicLocalAsset
	30, // 29: google.ads.googleads.v15.resources.Asset.dynamic_jobs_asset:type_name -> google.ads.googleads.v15.common.DynamicJobsAsset
	31, // 30: google.ads.googleads.v15.resources.Asset.location_asset:type_name -> google.ads.googleads.v15.common.LocationAsset
	32, // 31: google.ads.googleads.v15.resources.Asset.hotel_property_asset:type_name -> google.ads.googleads.v15.common.HotelPropertyAsset
	33, // 32: google.ads.googleads.v15.resources.AssetFieldTypePolicySummary.asset_field_type:type_name -> google.ads.googleads.v15.enums.AssetFieldTypeEnum.AssetFieldType
	5,  // 33: google.ads.googleads.v15.resources.AssetFieldTypePolicySummary.asset_source:type_name -> google.ads.googleads.v15.enums.AssetSourceEnum.AssetSource
	2,  // 34: google.ads.googleads.v15.resources.AssetFieldTypePolicySummary.policy_summary_info:type_name -> google.ads.googleads.v15.resources.AssetPolicySummary
	34, // 35: google.ads.googleads.v15.resources.AssetPolicySummary.policy_topic_entries:type_name -> google.ads.googleads.v15.common.PolicyTopicEntry
	35, // 36: google.ads.googleads.v15.resources.AssetPolicySummary.review_status:type_name -> google.ads.googleads.v15.enums.PolicyReviewStatusEnum.PolicyReviewStatus
	36, // 37: google.ads.googleads.v15.resources.AssetPolicySummary.approval_status:type_name -> google.ads.googleads.v15.enums.PolicyApprovalStatusEnum.PolicyApprovalStatus
	38, // [38:38] is the sub-list for method output_type
	38, // [38:38] is the sub-list for method input_type
	38, // [38:38] is the sub-list for extension type_name
	38, // [38:38] is the sub-list for extension extendee
	0,  // [0:38] is the sub-list for field type_name
}

func init() { file_google_ads_googleads_v15_resources_asset_proto_init() }
func file_google_ads_googleads_v15_resources_asset_proto_init() {
	if File_google_ads_googleads_v15_resources_asset_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_google_ads_googleads_v15_resources_asset_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Asset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_ads_googleads_v15_resources_asset_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetFieldTypePolicySummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_ads_googleads_v15_resources_asset_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetPolicySummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_google_ads_googleads_v15_resources_asset_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Asset_YoutubeVideoAsset)(nil),
		(*Asset_MediaBundleAsset)(nil),
		(*Asset_ImageAsset)(nil),
		(*Asset_TextAsset)(nil),
		(*Asset_LeadFormAsset)(nil),
		(*Asset_BookOnGoogleAsset)(nil),
		(*Asset_PromotionAsset)(nil),
		(*Asset_CalloutAsset)(nil),
		(*Asset_StructuredSnippetAsset)(nil),
		(*Asset_SitelinkAsset)(nil),
		(*Asset_PageFeedAsset)(nil),
		(*Asset_DynamicEducationAsset)(nil),
		(*Asset_MobileAppAsset)(nil),
		(*Asset_HotelCalloutAsset)(nil),
		(*Asset_CallAsset)(nil),
		(*Asset_PriceAsset)(nil),
		(*Asset_CallToActionAsset)(nil),
		(*Asset_DynamicRealEstateAsset)(nil),
		(*Asset_DynamicCustomAsset)(nil),
		(*Asset_DynamicHotelsAndRentalsAsset)(nil),
		(*Asset_DynamicFlightsAsset)(nil),
		(*Asset_DiscoveryCarouselCardAsset)(nil),
		(*Asset_DynamicTravelAsset)(nil),
		(*Asset_DynamicLocalAsset)(nil),
		(*Asset_DynamicJobsAsset)(nil),
		(*Asset_LocationAsset)(nil),
		(*Asset_HotelPropertyAsset)(nil),
	}
	file_google_ads_googleads_v15_resources_asset_proto_msgTypes[1].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_google_ads_googleads_v15_resources_asset_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_google_ads_googleads_v15_resources_asset_proto_goTypes,
		DependencyIndexes: file_google_ads_googleads_v15_resources_asset_proto_depIdxs,
		MessageInfos:      file_google_ads_googleads_v15_resources_asset_proto_msgTypes,
	}.Build()
	File_google_ads_googleads_v15_resources_asset_proto = out.File
	file_google_ads_googleads_v15_resources_asset_proto_rawDesc = nil
	file_google_ads_googleads_v15_resources_asset_proto_goTypes = nil
	file_google_ads_googleads_v15_resources_asset_proto_depIdxs = nil
}
