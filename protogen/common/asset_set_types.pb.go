// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.1
// source: google/ads/googleads/v15/common/asset_set_types.proto

package common

import (
	enums "github.com/Optable/google-ads-pb/protogen/enums"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Data related to location set. One of the Google Business Profile (previously
// known as Google My Business) data, Chain data, and map location data need to
// be specified.
type LocationSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. Immutable. Location Ownership Type (owned location or affiliate
	// location).
	LocationOwnershipType enums.LocationOwnershipTypeEnum_LocationOwnershipType `protobuf:"varint,3,opt,name=location_ownership_type,json=locationOwnershipType,proto3,enum=google.ads.googleads.v15.enums.LocationOwnershipTypeEnum_LocationOwnershipType" json:"location_ownership_type,omitempty"`
	// Location data specific to each sync source.
	//
	// Types that are assignable to Source:
	//
	//	*LocationSet_BusinessProfileLocationSet
	//	*LocationSet_ChainLocationSet
	//	*LocationSet_MapsLocationSet
	Source isLocationSet_Source `protobuf_oneof:"source"`
}

func (x *LocationSet) Reset() {
	*x = LocationSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_ads_googleads_v15_common_asset_set_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocationSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationSet) ProtoMessage() {}

func (x *LocationSet) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v15_common_asset_set_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationSet.ProtoReflect.Descriptor instead.
func (*LocationSet) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v15_common_asset_set_types_proto_rawDescGZIP(), []int{0}
}

func (x *LocationSet) GetLocationOwnershipType() enums.LocationOwnershipTypeEnum_LocationOwnershipType {
	if x != nil {
		return x.LocationOwnershipType
	}
	return enums.LocationOwnershipTypeEnum_LocationOwnershipType(0)
}

func (m *LocationSet) GetSource() isLocationSet_Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (x *LocationSet) GetBusinessProfileLocationSet() *BusinessProfileLocationSet {
	if x, ok := x.GetSource().(*LocationSet_BusinessProfileLocationSet); ok {
		return x.BusinessProfileLocationSet
	}
	return nil
}

func (x *LocationSet) GetChainLocationSet() *ChainSet {
	if x, ok := x.GetSource().(*LocationSet_ChainLocationSet); ok {
		return x.ChainLocationSet
	}
	return nil
}

func (x *LocationSet) GetMapsLocationSet() *MapsLocationSet {
	if x, ok := x.GetSource().(*LocationSet_MapsLocationSet); ok {
		return x.MapsLocationSet
	}
	return nil
}

type isLocationSet_Source interface {
	isLocationSet_Source()
}

type LocationSet_BusinessProfileLocationSet struct {
	// Data used to configure a location set populated from Google Business
	// Profile locations.
	BusinessProfileLocationSet *BusinessProfileLocationSet `protobuf:"bytes,1,opt,name=business_profile_location_set,json=businessProfileLocationSet,proto3,oneof"`
}

type LocationSet_ChainLocationSet struct {
	// Data used to configure a location on chain set populated with the
	// specified chains.
	ChainLocationSet *ChainSet `protobuf:"bytes,2,opt,name=chain_location_set,json=chainLocationSet,proto3,oneof"`
}

type LocationSet_MapsLocationSet struct {
	// Only set if locations are synced based on selected maps locations
	MapsLocationSet *MapsLocationSet `protobuf:"bytes,5,opt,name=maps_location_set,json=mapsLocationSet,proto3,oneof"`
}

func (*LocationSet_BusinessProfileLocationSet) isLocationSet_Source() {}

func (*LocationSet_ChainLocationSet) isLocationSet_Source() {}

func (*LocationSet_MapsLocationSet) isLocationSet_Source() {}

// Data used to configure a location set populated from Google Business Profile
// locations.
// Different types of filters are AND'ed together, if they are specified.
type BusinessProfileLocationSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. Immutable. The HTTP authorization token used to obtain
	// authorization.
	HttpAuthorizationToken string `protobuf:"bytes,1,opt,name=http_authorization_token,json=httpAuthorizationToken,proto3" json:"http_authorization_token,omitempty"`
	// Required. Immutable. Email address of a Google Business Profile account or
	// email address of a manager of the Google Business Profile account.
	EmailAddress string `protobuf:"bytes,2,opt,name=email_address,json=emailAddress,proto3" json:"email_address,omitempty"`
	// Used to filter Google Business Profile listings by business name. If
	// businessNameFilter is set, only listings with a matching business name are
	// candidates to be sync'd into Assets.
	BusinessNameFilter string `protobuf:"bytes,3,opt,name=business_name_filter,json=businessNameFilter,proto3" json:"business_name_filter,omitempty"`
	// Used to filter Google Business Profile listings by labels. If entries exist
	// in labelFilters, only listings that have any of the labels set are
	// candidates to be synchronized into Assets. If no entries exist in
	// labelFilters, then all listings are candidates for syncing.
	// Label filters are OR'ed together.
	LabelFilters []string `protobuf:"bytes,4,rep,name=label_filters,json=labelFilters,proto3" json:"label_filters,omitempty"`
	// Used to filter Google Business Profile listings by listing id. If entries
	// exist in listingIdFilters, only listings specified by the filters are
	// candidates to be synchronized into Assets. If no entries exist in
	// listingIdFilters, then all listings are candidates for syncing.
	// Listing ID filters are OR'ed together.
	ListingIdFilters []int64 `protobuf:"varint,5,rep,packed,name=listing_id_filters,json=listingIdFilters,proto3" json:"listing_id_filters,omitempty"`
	// Immutable. The account ID of the managed business whose locations are to be
	// used. If this field is not set, then all businesses accessible by the user
	// (specified by the emailAddress) are used.
	BusinessAccountId string `protobuf:"bytes,6,opt,name=business_account_id,json=businessAccountId,proto3" json:"business_account_id,omitempty"`
}

func (x *BusinessProfileLocationSet) Reset() {
	*x = BusinessProfileLocationSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_ads_googleads_v15_common_asset_set_types_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BusinessProfileLocationSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BusinessProfileLocationSet) ProtoMessage() {}

func (x *BusinessProfileLocationSet) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v15_common_asset_set_types_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BusinessProfileLocationSet.ProtoReflect.Descriptor instead.
func (*BusinessProfileLocationSet) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v15_common_asset_set_types_proto_rawDescGZIP(), []int{1}
}

func (x *BusinessProfileLocationSet) GetHttpAuthorizationToken() string {
	if x != nil {
		return x.HttpAuthorizationToken
	}
	return ""
}

func (x *BusinessProfileLocationSet) GetEmailAddress() string {
	if x != nil {
		return x.EmailAddress
	}
	return ""
}

func (x *BusinessProfileLocationSet) GetBusinessNameFilter() string {
	if x != nil {
		return x.BusinessNameFilter
	}
	return ""
}

func (x *BusinessProfileLocationSet) GetLabelFilters() []string {
	if x != nil {
		return x.LabelFilters
	}
	return nil
}

func (x *BusinessProfileLocationSet) GetListingIdFilters() []int64 {
	if x != nil {
		return x.ListingIdFilters
	}
	return nil
}

func (x *BusinessProfileLocationSet) GetBusinessAccountId() string {
	if x != nil {
		return x.BusinessAccountId
	}
	return ""
}

// Data used to configure a location set populated with the specified chains.
type ChainSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. Immutable. Relationship type the specified chains have with this
	// advertiser.
	RelationshipType enums.ChainRelationshipTypeEnum_ChainRelationshipType `protobuf:"varint,1,opt,name=relationship_type,json=relationshipType,proto3,enum=google.ads.googleads.v15.enums.ChainRelationshipTypeEnum_ChainRelationshipType" json:"relationship_type,omitempty"`
	// Required. A list of chain level filters, all filters are OR'ed together.
	Chains []*ChainFilter `protobuf:"bytes,2,rep,name=chains,proto3" json:"chains,omitempty"`
}

func (x *ChainSet) Reset() {
	*x = ChainSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_ads_googleads_v15_common_asset_set_types_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChainSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChainSet) ProtoMessage() {}

func (x *ChainSet) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v15_common_asset_set_types_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChainSet.ProtoReflect.Descriptor instead.
func (*ChainSet) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v15_common_asset_set_types_proto_rawDescGZIP(), []int{2}
}

func (x *ChainSet) GetRelationshipType() enums.ChainRelationshipTypeEnum_ChainRelationshipType {
	if x != nil {
		return x.RelationshipType
	}
	return enums.ChainRelationshipTypeEnum_ChainRelationshipType(0)
}

func (x *ChainSet) GetChains() []*ChainFilter {
	if x != nil {
		return x.Chains
	}
	return nil
}

// One chain level filter on location in a feed item set.
// The filtering logic among all the fields is AND.
type ChainFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. Used to filter chain locations by chain id. Only chain locations
	// that belong to the specified chain will be in the asset set.
	ChainId int64 `protobuf:"varint,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	// Used to filter chain locations by location attributes.
	// Only chain locations that belong to all of the specified attribute(s) will
	// be in the asset set. If this field is empty, it means no filtering on this
	// field.
	LocationAttributes []string `protobuf:"bytes,2,rep,name=location_attributes,json=locationAttributes,proto3" json:"location_attributes,omitempty"`
}

func (x *ChainFilter) Reset() {
	*x = ChainFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_ads_googleads_v15_common_asset_set_types_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChainFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChainFilter) ProtoMessage() {}

func (x *ChainFilter) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v15_common_asset_set_types_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChainFilter.ProtoReflect.Descriptor instead.
func (*ChainFilter) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v15_common_asset_set_types_proto_rawDescGZIP(), []int{3}
}

func (x *ChainFilter) GetChainId() int64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *ChainFilter) GetLocationAttributes() []string {
	if x != nil {
		return x.LocationAttributes
	}
	return nil
}

// Wrapper for multiple maps location sync data
type MapsLocationSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. A list of maps location info that user manually synced in.
	MapsLocations []*MapsLocationInfo `protobuf:"bytes,1,rep,name=maps_locations,json=mapsLocations,proto3" json:"maps_locations,omitempty"`
}

func (x *MapsLocationSet) Reset() {
	*x = MapsLocationSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_ads_googleads_v15_common_asset_set_types_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapsLocationSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapsLocationSet) ProtoMessage() {}

func (x *MapsLocationSet) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v15_common_asset_set_types_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapsLocationSet.ProtoReflect.Descriptor instead.
func (*MapsLocationSet) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v15_common_asset_set_types_proto_rawDescGZIP(), []int{4}
}

func (x *MapsLocationSet) GetMapsLocations() []*MapsLocationInfo {
	if x != nil {
		return x.MapsLocations
	}
	return nil
}

// Wrapper for place ids
type MapsLocationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Place ID of the Maps location.
	PlaceId string `protobuf:"bytes,1,opt,name=place_id,json=placeId,proto3" json:"place_id,omitempty"`
}

func (x *MapsLocationInfo) Reset() {
	*x = MapsLocationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_ads_googleads_v15_common_asset_set_types_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapsLocationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapsLocationInfo) ProtoMessage() {}

func (x *MapsLocationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v15_common_asset_set_types_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapsLocationInfo.ProtoReflect.Descriptor instead.
func (*MapsLocationInfo) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v15_common_asset_set_types_proto_rawDescGZIP(), []int{5}
}

func (x *MapsLocationInfo) GetPlaceId() string {
	if x != nil {
		return x.PlaceId
	}
	return ""
}

// Information about a Business Profile dynamic location group.
// Only applicable if the sync level AssetSet's type is LOCATION_SYNC and
// sync source is Business Profile.
type BusinessProfileLocationGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Filter for dynamic Business Profile location sets.
	DynamicBusinessProfileLocationGroupFilter *DynamicBusinessProfileLocationGroupFilter `protobuf:"bytes,1,opt,name=dynamic_business_profile_location_group_filter,json=dynamicBusinessProfileLocationGroupFilter,proto3" json:"dynamic_business_profile_location_group_filter,omitempty"`
}

func (x *BusinessProfileLocationGroup) Reset() {
	*x = BusinessProfileLocationGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_ads_googleads_v15_common_asset_set_types_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BusinessProfileLocationGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BusinessProfileLocationGroup) ProtoMessage() {}

func (x *BusinessProfileLocationGroup) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v15_common_asset_set_types_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BusinessProfileLocationGroup.ProtoReflect.Descriptor instead.
func (*BusinessProfileLocationGroup) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v15_common_asset_set_types_proto_rawDescGZIP(), []int{6}
}

func (x *BusinessProfileLocationGroup) GetDynamicBusinessProfileLocationGroupFilter() *DynamicBusinessProfileLocationGroupFilter {
	if x != nil {
		return x.DynamicBusinessProfileLocationGroupFilter
	}
	return nil
}

// Represents a filter on Business Profile locations in an asset set. If
// multiple filters are provided, they are AND'ed together.
type DynamicBusinessProfileLocationGroupFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Used to filter Business Profile locations by label. Only locations that
	// have any of the listed labels will be in the asset set.
	// Label filters are OR'ed together.
	LabelFilters []string `protobuf:"bytes,1,rep,name=label_filters,json=labelFilters,proto3" json:"label_filters,omitempty"`
	// Used to filter Business Profile locations by business name.
	BusinessNameFilter *BusinessProfileBusinessNameFilter `protobuf:"bytes,2,opt,name=business_name_filter,json=businessNameFilter,proto3,oneof" json:"business_name_filter,omitempty"`
	// Used to filter Business Profile locations by listing ids.
	ListingIdFilters []int64 `protobuf:"varint,3,rep,packed,name=listing_id_filters,json=listingIdFilters,proto3" json:"listing_id_filters,omitempty"`
}

func (x *DynamicBusinessProfileLocationGroupFilter) Reset() {
	*x = DynamicBusinessProfileLocationGroupFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_ads_googleads_v15_common_asset_set_types_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicBusinessProfileLocationGroupFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicBusinessProfileLocationGroupFilter) ProtoMessage() {}

func (x *DynamicBusinessProfileLocationGroupFilter) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v15_common_asset_set_types_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicBusinessProfileLocationGroupFilter.ProtoReflect.Descriptor instead.
func (*DynamicBusinessProfileLocationGroupFilter) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v15_common_asset_set_types_proto_rawDescGZIP(), []int{7}
}

func (x *DynamicBusinessProfileLocationGroupFilter) GetLabelFilters() []string {
	if x != nil {
		return x.LabelFilters
	}
	return nil
}

func (x *DynamicBusinessProfileLocationGroupFilter) GetBusinessNameFilter() *BusinessProfileBusinessNameFilter {
	if x != nil {
		return x.BusinessNameFilter
	}
	return nil
}

func (x *DynamicBusinessProfileLocationGroupFilter) GetListingIdFilters() []int64 {
	if x != nil {
		return x.ListingIdFilters
	}
	return nil
}

// Business Profile location group business name filter.
type BusinessProfileBusinessNameFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Business name string to use for filtering.
	BusinessName string `protobuf:"bytes,1,opt,name=business_name,json=businessName,proto3" json:"business_name,omitempty"`
	// The type of string matching to use when filtering with business_name.
	FilterType enums.LocationStringFilterTypeEnum_LocationStringFilterType `protobuf:"varint,2,opt,name=filter_type,json=filterType,proto3,enum=google.ads.googleads.v15.enums.LocationStringFilterTypeEnum_LocationStringFilterType" json:"filter_type,omitempty"`
}

func (x *BusinessProfileBusinessNameFilter) Reset() {
	*x = BusinessProfileBusinessNameFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_ads_googleads_v15_common_asset_set_types_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BusinessProfileBusinessNameFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BusinessProfileBusinessNameFilter) ProtoMessage() {}

func (x *BusinessProfileBusinessNameFilter) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v15_common_asset_set_types_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BusinessProfileBusinessNameFilter.ProtoReflect.Descriptor instead.
func (*BusinessProfileBusinessNameFilter) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v15_common_asset_set_types_proto_rawDescGZIP(), []int{8}
}

func (x *BusinessProfileBusinessNameFilter) GetBusinessName() string {
	if x != nil {
		return x.BusinessName
	}
	return ""
}

func (x *BusinessProfileBusinessNameFilter) GetFilterType() enums.LocationStringFilterTypeEnum_LocationStringFilterType {
	if x != nil {
		return x.FilterType
	}
	return enums.LocationStringFilterTypeEnum_LocationStringFilterType(0)
}

// Represents information about a Chain dynamic location group.
// Only applicable if the sync level AssetSet's type is LOCATION_SYNC and
// sync source is chain.
type ChainLocationGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Used to filter chain locations by chain ids.
	// Only Locations that belong to the specified chain(s) will be in the asset
	// set.
	DynamicChainLocationGroupFilters []*ChainFilter `protobuf:"bytes,1,rep,name=dynamic_chain_location_group_filters,json=dynamicChainLocationGroupFilters,proto3" json:"dynamic_chain_location_group_filters,omitempty"`
}

func (x *ChainLocationGroup) Reset() {
	*x = ChainLocationGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_ads_googleads_v15_common_asset_set_types_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChainLocationGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChainLocationGroup) ProtoMessage() {}

func (x *ChainLocationGroup) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v15_common_asset_set_types_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChainLocationGroup.ProtoReflect.Descriptor instead.
func (*ChainLocationGroup) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v15_common_asset_set_types_proto_rawDescGZIP(), []int{9}
}

func (x *ChainLocationGroup) GetDynamicChainLocationGroupFilters() []*ChainFilter {
	if x != nil {
		return x.DynamicChainLocationGroupFilters
	}
	return nil
}

var File_google_ads_googleads_v15_common_asset_set_types_proto protoreflect.FileDescriptor

var file_google_ads_googleads_v15_common_asset_set_types_proto_rawDesc = []byte{
	0x0a, 0x35, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x64, 0x73, 0x2f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2f, 0x76, 0x31, 0x35, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31,
	0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x3c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x64, 0x73, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2f, 0x76,
	0x31, 0x35, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x64, 0x73, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2f, 0x76, 0x31, 0x35,
	0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x40, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x64, 0x73,
	0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2f, 0x76, 0x31, 0x35, 0x2f, 0x65,
	0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe7, 0x03, 0x0a, 0x0b, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x12, 0x8f, 0x01, 0x0a, 0x17, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4f, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73,
	0x2e, 0x76, 0x31, 0x35, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x77, 0x6e,
	0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x42, 0x06, 0xe0, 0x41, 0x02, 0xe0,
	0x41, 0x05, 0x52, 0x15, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x77, 0x6e, 0x65,
	0x72, 0x73, 0x68, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x1d, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x48, 0x00,
	0x52, 0x1a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x12, 0x59, 0x0a, 0x12,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73,
	0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e,
	0x76, 0x31, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x53, 0x65, 0x74, 0x48, 0x00, 0x52, 0x10, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x12, 0x5e, 0x0a, 0x11, 0x6d, 0x61, 0x70, 0x73, 0x5f,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x30, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x61, 0x70, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x6d, 0x61, 0x70, 0x73, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x22, 0xc5, 0x02, 0x0a, 0x1a, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74,
	0x12, 0x40, 0x0a, 0x18, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x06, 0xe0, 0x41, 0x05, 0xe0, 0x41, 0x02, 0x52, 0x16, 0x68, 0x74, 0x74, 0x70,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x2b, 0x0a, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe0, 0x41, 0x02, 0xe0, 0x41,
	0x05, 0x52, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x30, 0x0a, 0x14, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e,
	0x67, 0x5f, 0x69, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x10, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x12, 0x33, 0x0a, 0x13, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x03, 0xe0, 0x41, 0x05, 0x52, 0x11, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xdc, 0x01, 0x0a, 0x08, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x53, 0x65, 0x74, 0x12, 0x84, 0x01, 0x0a, 0x11, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x4f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x65, 0x6e,
	0x75, 0x6d, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x68, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x54,
	0x79, 0x70, 0x65, 0x42, 0x06, 0xe0, 0x41, 0x02, 0xe0, 0x41, 0x05, 0x52, 0x10, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x49, 0x0a,
	0x06, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x43, 0x68, 0x61, 0x69, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x03, 0xe0, 0x41, 0x02,
	0x52, 0x06, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x73, 0x22, 0x5e, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x69,
	0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x07,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x13, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x22, 0x70, 0x0a, 0x0f, 0x4d, 0x61, 0x70, 0x73,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x12, 0x5d, 0x0a, 0x0e, 0x6d,
	0x61, 0x70, 0x73, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x61, 0x70, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0d, 0x6d, 0x61, 0x70,
	0x73, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x2d, 0x0a, 0x10, 0x4d, 0x61,
	0x70, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19,
	0x0a, 0x08, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x49, 0x64, 0x22, 0xce, 0x01, 0x0a, 0x1c, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0xad, 0x01, 0x0a, 0x2e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52,
	0x29, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x92, 0x02, 0x0a, 0x29, 0x44,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0c, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x79, 0x0a,
	0x14, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61,
	0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48,
	0x00, 0x52, 0x12, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x12, 0x6c, 0x69, 0x73, 0x74,
	0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x10, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22,
	0xc0, 0x01, 0x0a, 0x21, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x76, 0x0a, 0x0b, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x55, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73,
	0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x92, 0x01, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x7c, 0x0a, 0x24, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76,
	0x31, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x20, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x42, 0xf2, 0x01, 0x0a, 0x23, 0x63, 0x6f, 0x6d, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x42,
	0x12, 0x41, 0x73, 0x73, 0x65, 0x74, 0x53, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x45, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x67, 0x6f,
	0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x61, 0x64, 0x73,
	0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2f, 0x76, 0x31, 0x35, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x3b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0xa2, 0x02, 0x03, 0x47,
	0x41, 0x41, 0xaa, 0x02, 0x1f, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x41, 0x64, 0x73, 0x2e,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x64, 0x73, 0x2e, 0x56, 0x31, 0x35, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0xca, 0x02, 0x1f, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x5c, 0x41, 0x64,
	0x73, 0x5c, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x64, 0x73, 0x5c, 0x56, 0x31, 0x35, 0x5c,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0xea, 0x02, 0x23, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x3a,
	0x3a, 0x41, 0x64, 0x73, 0x3a, 0x3a, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x64, 0x73, 0x3a,
	0x3a, 0x56, 0x31, 0x35, 0x3a, 0x3a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_google_ads_googleads_v15_common_asset_set_types_proto_rawDescOnce sync.Once
	file_google_ads_googleads_v15_common_asset_set_types_proto_rawDescData = file_google_ads_googleads_v15_common_asset_set_types_proto_rawDesc
)

func file_google_ads_googleads_v15_common_asset_set_types_proto_rawDescGZIP() []byte {
	file_google_ads_googleads_v15_common_asset_set_types_proto_rawDescOnce.Do(func() {
		file_google_ads_googleads_v15_common_asset_set_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_google_ads_googleads_v15_common_asset_set_types_proto_rawDescData)
	})
	return file_google_ads_googleads_v15_common_asset_set_types_proto_rawDescData
}

var file_google_ads_googleads_v15_common_asset_set_types_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_google_ads_googleads_v15_common_asset_set_types_proto_goTypes = []interface{}{
	(*LocationSet)(nil),                                              // 0: google.ads.googleads.v15.common.LocationSet
	(*BusinessProfileLocationSet)(nil),                               // 1: google.ads.googleads.v15.common.BusinessProfileLocationSet
	(*ChainSet)(nil),                                                 // 2: google.ads.googleads.v15.common.ChainSet
	(*ChainFilter)(nil),                                              // 3: google.ads.googleads.v15.common.ChainFilter
	(*MapsLocationSet)(nil),                                          // 4: google.ads.googleads.v15.common.MapsLocationSet
	(*MapsLocationInfo)(nil),                                         // 5: google.ads.googleads.v15.common.MapsLocationInfo
	(*BusinessProfileLocationGroup)(nil),                             // 6: google.ads.googleads.v15.common.BusinessProfileLocationGroup
	(*DynamicBusinessProfileLocationGroupFilter)(nil),                // 7: google.ads.googleads.v15.common.DynamicBusinessProfileLocationGroupFilter
	(*BusinessProfileBusinessNameFilter)(nil),                        // 8: google.ads.googleads.v15.common.BusinessProfileBusinessNameFilter
	(*ChainLocationGroup)(nil),                                       // 9: google.ads.googleads.v15.common.ChainLocationGroup
	(enums.LocationOwnershipTypeEnum_LocationOwnershipType)(0),       // 10: google.ads.googleads.v15.enums.LocationOwnershipTypeEnum.LocationOwnershipType
	(enums.ChainRelationshipTypeEnum_ChainRelationshipType)(0),       // 11: google.ads.googleads.v15.enums.ChainRelationshipTypeEnum.ChainRelationshipType
	(enums.LocationStringFilterTypeEnum_LocationStringFilterType)(0), // 12: google.ads.googleads.v15.enums.LocationStringFilterTypeEnum.LocationStringFilterType
}
var file_google_ads_googleads_v15_common_asset_set_types_proto_depIdxs = []int32{
	10, // 0: google.ads.googleads.v15.common.LocationSet.location_ownership_type:type_name -> google.ads.googleads.v15.enums.LocationOwnershipTypeEnum.LocationOwnershipType
	1,  // 1: google.ads.googleads.v15.common.LocationSet.business_profile_location_set:type_name -> google.ads.googleads.v15.common.BusinessProfileLocationSet
	2,  // 2: google.ads.googleads.v15.common.LocationSet.chain_location_set:type_name -> google.ads.googleads.v15.common.ChainSet
	4,  // 3: google.ads.googleads.v15.common.LocationSet.maps_location_set:type_name -> google.ads.googleads.v15.common.MapsLocationSet
	11, // 4: google.ads.googleads.v15.common.ChainSet.relationship_type:type_name -> google.ads.googleads.v15.enums.ChainRelationshipTypeEnum.ChainRelationshipType
	3,  // 5: google.ads.googleads.v15.common.ChainSet.chains:type_name -> google.ads.googleads.v15.common.ChainFilter
	5,  // 6: google.ads.googleads.v15.common.MapsLocationSet.maps_locations:type_name -> google.ads.googleads.v15.common.MapsLocationInfo
	7,  // 7: google.ads.googleads.v15.common.BusinessProfileLocationGroup.dynamic_business_profile_location_group_filter:type_name -> google.ads.googleads.v15.common.DynamicBusinessProfileLocationGroupFilter
	8,  // 8: google.ads.googleads.v15.common.DynamicBusinessProfileLocationGroupFilter.business_name_filter:type_name -> google.ads.googleads.v15.common.BusinessProfileBusinessNameFilter
	12, // 9: google.ads.googleads.v15.common.BusinessProfileBusinessNameFilter.filter_type:type_name -> google.ads.googleads.v15.enums.LocationStringFilterTypeEnum.LocationStringFilterType
	3,  // 10: google.ads.googleads.v15.common.ChainLocationGroup.dynamic_chain_location_group_filters:type_name -> google.ads.googleads.v15.common.ChainFilter
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_google_ads_googleads_v15_common_asset_set_types_proto_init() }
func file_google_ads_googleads_v15_common_asset_set_types_proto_init() {
	if File_google_ads_googleads_v15_common_asset_set_types_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_google_ads_googleads_v15_common_asset_set_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocationSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_ads_googleads_v15_common_asset_set_types_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BusinessProfileLocationSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_ads_googleads_v15_common_asset_set_types_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChainSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_ads_googleads_v15_common_asset_set_types_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChainFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_ads_googleads_v15_common_asset_set_types_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapsLocationSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_ads_googleads_v15_common_asset_set_types_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapsLocationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_ads_googleads_v15_common_asset_set_types_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BusinessProfileLocationGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_ads_googleads_v15_common_asset_set_types_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicBusinessProfileLocationGroupFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_ads_googleads_v15_common_asset_set_types_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BusinessProfileBusinessNameFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_ads_googleads_v15_common_asset_set_types_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChainLocationGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_google_ads_googleads_v15_common_asset_set_types_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*LocationSet_BusinessProfileLocationSet)(nil),
		(*LocationSet_ChainLocationSet)(nil),
		(*LocationSet_MapsLocationSet)(nil),
	}
	file_google_ads_googleads_v15_common_asset_set_types_proto_msgTypes[7].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_google_ads_googleads_v15_common_asset_set_types_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_google_ads_googleads_v15_common_asset_set_types_proto_goTypes,
		DependencyIndexes: file_google_ads_googleads_v15_common_asset_set_types_proto_depIdxs,
		MessageInfos:      file_google_ads_googleads_v15_common_asset_set_types_proto_msgTypes,
	}.Build()
	File_google_ads_googleads_v15_common_asset_set_types_proto = out.File
	file_google_ads_googleads_v15_common_asset_set_types_proto_rawDesc = nil
	file_google_ads_googleads_v15_common_asset_set_types_proto_goTypes = nil
	file_google_ads_googleads_v15_common_asset_set_types_proto_depIdxs = nil
}
